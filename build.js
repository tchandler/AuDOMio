
var MUSIC={notes:{'Fb':[6,-10],'Cb':[5,-9],'Gb':[5,-8],'Db':[4,-7],'Ab':[4,-6],'Eb':[3,-5],'Bb':[3,-4],'F':[2,-3],'C':[1,-2],'G':[1,-1],'D':[0,0],'A':[0,1],'E':[-1,2],'B':[-1,3],'F#':[-2,4],'C#':[-3,5],'G#':[-3,6],'D#':[-4,7],'A#':[-4,8],'E#':[-5,9],'B#':[-5,10]},baseFreq:440,baseOffset:[4,1],intervals:{'unison':[0,0],'minor second':[3,-5],'major second':[-1,2],'minor third':[2,-3],'major third':[-2,4],'fourth':[1,-1],'augmented fourth':[-3,6],'tritone':[-3,6],'diminished fifth':[4,-6],'fifth':[0,1],'minor sixth':[3,-4],'major sixth':[-1,3],'minor seventh':[2,-2],'major seventh':[-2,5],'octave':[1,0]},intervals_semitones:{0:[0,0],1:[3,-5],2:[-1,2],3:[2,-3],4:[-2,4],5:[1,-1],6:[-3,6],7:[0,1],8:[3,-4],9:[-1,3],10:[2,-2],11:[-2,5],12:[1,0]},scales:{'major':['major second','major third','fourth','fifth','major sixth','major seventh'],'natural minor':['major second','minor third','fourth','fifth','minor sixth','minor seventh'],'harmonic minor':['major second','minor third','fourth','fifth','minor sixth','major seventh'],'major pentatonic':['major second','major third','fifth','major sixth'],'minor pentatonic':['minor third','fourth','minor sixth','minor seventh']}};function Note(coord){this.coord=coord;}
Note.prototype.frequency=function(){return MUSIC.baseFreq*Math.pow(2.0,(this.coord[0]*1200+this.coord[1]*700)/1200);}
Note.prototype.accidental=function(){return Math.round((this.coord[1]+MUSIC.baseOffset[1])/7);}
Note.prototype.octave=function(){var acc=this.accidental();return this.coord[0]+MUSIC.baseOffset[0]+4*acc+Math.floor((this.coord[1]+MUSIC.baseOffset[1]-7*acc)/2);}
Note.prototype.latin=function(){var noteNames=['F','C','G','D','A','E','B'];var accidentals=['bb','b','','#','x'];var acc=this.accidental();return noteNames[this.coord[1]+MUSIC.baseOffset[1]-acc*7+3]+accidentals[acc+2];}
Note.fromLatin=function(name){var out=[],j=0,i,coord;var n=name.split(/(\d+)/);if(n.length>3){for(i=0;i<(n.length-1)/2;i++){coord=MUSIC.notes[n[j]];coord=[coord[0]+parseInt(n[j+1]),coord[1]];coord[0]-=MUSIC.baseOffset[0];coord[1]-=MUSIC.baseOffset[1];out[i]=new Note(coord);j+=2;}
return out;}
else
{coord=MUSIC.notes[n[0]];coord=[coord[0]+parseInt(n[1]),coord[1]];coord[0]-=MUSIC.baseOffset[0];coord[1]-=MUSIC.baseOffset[1];return new Note(coord);}}
Note.prototype.scale=function(name){var out=[],i;var scale=MUSIC.scales[name];out.push(this.add('unison'));for(i=0;i<scale.length;i++){out[i+1]=this.add(Interval.fromName(scale[i]));}
out.push(this.add('octave'));return out;}
Note.prototype.add=function(interval){var out=[],i;if(typeof(interval)=='string'){interval=Interval.fromName(interval);}
if(interval.length){for(i=0;i<interval.length;i++){out[i]=this.add(interval[i]);}
add_addsubtract_func(out);return out;}
else{return new Note([this.coord[0]+interval.coord[0],this.coord[1]+interval.coord[1]]);}}
Note.prototype.subtract=function(interval){var out=[],i,coord;if(typeof(interval)=='string'){interval=Interval.fromName(interval);}
if(interval.length){for(i=0;i<interval.length;i++){out[i]=this.subtract(interval[i]);}
add_addsubtract_func(out);return out;}
else{coord=[this.coord[0]-interval.coord[0],this.coord[1]-interval.coord[1]];if(typeof(interval.frequency)=='function'){return new Interval(coord);}else{return new Note(coord);}}}
function Interval(coord){this.coord=coord;}
Interval.fromName=function(name){return new Interval(MUSIC.intervals[name]);}
Interval.fromSemitones=function(num){return new Interval(MUSIC.intervals_semitones[num]);}
Interval.fromTonesSemitones=function(tone_semitone){return new Interval([tone_semitone[0]*-1+tone_semitone[1]*3,tone_semitone[0]*2+tone_semitone[1]*-5]);}
Interval.prototype.tone_semitone=function(){return[this.coord[0]*5+this.coord[1]*3,this.coord[0]*2+this.coord[1]*1];}
Interval.prototype.semitone=function(){var tone_semitone=this.tone_semitone();return tone_semitone[0]*2+tone_semitone[1];}
Interval.prototype.add=function(interval){if(typeof(interval)=='string'){interval=Interval.fromName(interval);}
return new Interval([this.coord[0]+interval.coord[0],this.coord[1]+interval.coord[1]]);}
Interval.prototype.subtract=function(interval){if(typeof(interval)=='string'){interval=Interval.fromName(interval);}
return new Note([this.coord[0]-interval.coord[0],this.coord[1]-interval.coord[1]]);}
function add_addsubtract_func(array){array.add=function(that){var out=[],x;for(x in this){if(typeof(this[x])=='object'){out[x]=this[x].add(that);}}
add_addsubtract_func(out);return out;};array.subtract=function(that){var out=[],x;for(x in this){if(typeof(this[x])=='object'){out[x]=this[x].subtract(that);}}
add_addsubtract_func(out);return out;};return array;}
var AudioletBuffer=function(numberOfChannels,length){this.numberOfChannels=numberOfChannels;this.length=length;this.channels=[];for(var i=0;i<this.numberOfChannels;i++){this.channels.push(new Float32Array(length));}
this.unslicedChannels=[];for(var i=0;i<this.numberOfChannels;i++){this.unslicedChannels.push(this.channels[i]);}
this.isEmpty=false;this.channelOffset=0;};AudioletBuffer.prototype.getChannelData=function(channel){return(this.channels[channel]);};AudioletBuffer.prototype.set=function(buffer){var numberOfChannels=buffer.numberOfChannels;for(var i=0;i<numberOfChannels;i++){this.channels[i].set(buffer.getChannelData(i));}};AudioletBuffer.prototype.setSection=function(buffer,length,inputOffset,outputOffset){inputOffset=inputOffset||0;outputOffset=outputOffset||0;var numberOfChannels=buffer.numberOfChannels;for(var i=0;i<numberOfChannels;i++){inputOffset+=buffer.channelOffset;outputOffset+=this.channelOffset;var channel1=this.unslicedChannels[i].subarray(outputOffset,outputOffset+
length);var channel2=buffer.unslicedChannels[i].subarray(inputOffset,inputOffset+
length);/*!
           var channel1 = this.getChannelData(i).subarray(outputOffset,
           outputOffset +
           length);
           var channel2 = buffer.getChannelData(i).subarray(inputOffset,
           inputOffset +
           length);
         */channel1.set(channel2);}};AudioletBuffer.prototype.add=function(buffer){var length=this.length;var numberOfChannels=buffer.numberOfChannels;for(var i=0;i<numberOfChannels;i++){var channel1=this.getChannelData(i);var channel2=buffer.getChannelData(i);for(var j=0;j<length;j++){channel1[j]+=channel2[j];}}};AudioletBuffer.prototype.addSection=function(buffer,length,inputOffset,outputOffset){inputOffset=inputOffset||0;outputOffset=outputOffset||0;var numberOfChannels=buffer.numberOfChannels;for(var i=0;i<numberOfChannels;i++){var channel1=this.getChannelData(i);var channel2=buffer.getChannelData(i);for(var j=0;j<length;j++){channel1[j+outputOffset]+=channel2[j+inputOffset];}}};AudioletBuffer.prototype.resize=function(numberOfChannels,length,lazy,offset){offset=offset||0;var channels=this.channels;var unslicedChannels=this.unslicedChannels;var oldLength=this.length;var channelOffset=this.channelOffset+offset;for(var i=0;i<numberOfChannels;i++){var channel=channels[i];var unslicedChannel=unslicedChannels[i];if(length>oldLength){var oldChannel=channel;if(!lazy||!unslicedChannel||unslicedChannel.length<length){unslicedChannel=new Float32Array(length);}
channel=unslicedChannel.subarray(0,length);if(!lazy&&oldChannel){channel.set(oldChannel,offset);}
channelOffset=0;}
else{if(!unslicedChannel){var unslicedLength=unslicedChannels[0].length;unslicedChannel=new Float32Array(unslicedLength);}
offset=channelOffset;channel=unslicedChannel.subarray(offset,offset+length);}
channels[i]=channel;unslicedChannels[i]=unslicedChannel;}
this.channels=channels.slice(0,numberOfChannels);this.unslicedChannels=unslicedChannels.slice(0,numberOfChannels);this.length=length;this.numberOfChannels=numberOfChannels;this.channelOffset=channelOffset;};AudioletBuffer.prototype.push=function(buffer){var bufferLength=buffer.length;this.resize(this.numberOfChannels,this.length+bufferLength);this.setSection(buffer,bufferLength,0,this.length-bufferLength);};AudioletBuffer.prototype.pop=function(buffer){var bufferLength=buffer.length;var offset=this.length-bufferLength;buffer.setSection(this,bufferLength,offset,0);this.resize(this.numberOfChannels,offset);};AudioletBuffer.prototype.unshift=function(buffer){var bufferLength=buffer.length;this.resize(this.numberOfChannels,this.length+bufferLength,false,bufferLength);this.setSection(buffer,bufferLength,0,0);};AudioletBuffer.prototype.shift=function(buffer){var bufferLength=buffer.length;buffer.setSection(this,bufferLength,0,0);this.resize(this.numberOfChannels,this.length-bufferLength,false,bufferLength);};AudioletBuffer.prototype.zero=function(){var numberOfChannels=this.numberOfChannels;for(var i=0;i<numberOfChannels;i++){var channel=this.getChannelData(i);var length=this.length;for(var j=0;j<length;j++){channel[j]=0;}}};AudioletBuffer.prototype.combined=function(){var channels=this.channels;var numberOfChannels=this.numberOfChannels;var length=this.length;var combined=new Float32Array(numberOfChannels*length);for(var i=0;i<numberOfChannels;i++){combined.set(channels[i],i*length);}
return combined;};AudioletBuffer.prototype.interleaved=function(){var channels=this.channels;var numberOfChannels=this.numberOfChannels;var length=this.length;var interleaved=new Float32Array(numberOfChannels*length);for(var i=0;i<length;i++){for(var j=0;j<numberOfChannels;j++){interleaved[numberOfChannels*i+j]=channels[j][i];}}
return interleaved;};AudioletBuffer.prototype.copy=function(){var buffer=new AudioletBuffer(this.numberOfChannels,this.length);buffer.set(this);return buffer;};AudioletBuffer.prototype.load=function(path,async,callback){var request=new AudioFileRequest(path,async);request.onSuccess=function(decoded){this.length=decoded.length;this.numberOfChannels=decoded.channels.length;this.unslicedChannels=decoded.channels;this.channels=decoded.channels;this.channelOffset=0;if(callback){callback();}}.bind(this);request.onFailure=function(){console.error('Could not load',path);}.bind(this);request.send();};var AudioletGroup=function(audiolet,numberOfInputs,numberOfOutputs){this.audiolet=audiolet;this.inputs=[];for(var i=0;i<numberOfInputs;i++){this.inputs.push(new PassThroughNode(this.audiolet,1,1));}
this.outputs=[];for(var i=0;i<numberOfOutputs;i++){this.outputs.push(new PassThroughNode(this.audiolet,1,1));}};AudioletGroup.prototype.connect=function(node,output,input){this.outputs[output||0].connect(node,0,input);};AudioletGroup.prototype.disconnect=function(node,output,input){this.outputs[output||0].disconnect(node,0,input);};AudioletGroup.prototype.remove=function(){var numberOfInputs=this.inputs.length;for(var i=0;i<numberOfInputs;i++){this.inputs[i].remove();}
var numberOfOutputs=this.outputs.length;for(var i=0;i<numberOfOutputs;i++){this.outputs[i].remove();}};/*!
  @depends AudioletGroup.js
 */var AudioletDestination=function(audiolet,sampleRate,numberOfChannels,bufferSize){AudioletGroup.call(this,audiolet,1,0);this.device=new AudioletDevice(audiolet,sampleRate,numberOfChannels,bufferSize);audiolet.device=this.device;this.scheduler=new Scheduler(audiolet);audiolet.scheduler=this.scheduler;this.upMixer=new UpMixer(audiolet,this.device.numberOfChannels);this.inputs[0].connect(this.scheduler);this.scheduler.connect(this.upMixer);this.upMixer.connect(this.device);};extend(AudioletDestination,AudioletGroup);AudioletDestination.prototype.toString=function(){return'Destination';};var AudioletNode=function(audiolet,numberOfInputs,numberOfOutputs,generate){this.audiolet=audiolet;this.inputs=[];for(var i=0;i<numberOfInputs;i++){this.inputs.push(new AudioletInput(this,i));}
this.outputs=[];for(var i=0;i<numberOfOutputs;i++){this.outputs.push(new AudioletOutput(this,i));}
if(generate){this.generate=generate;}};AudioletNode.prototype.connect=function(node,output,input){if(node instanceof AudioletGroup){node=node.inputs[input||0];input=0;}
var outputPin=this.outputs[output||0];var inputPin=node.inputs[input||0];outputPin.connect(inputPin);inputPin.connect(outputPin);this.audiolet.device.needTraverse=true;};AudioletNode.prototype.disconnect=function(node,output,input){if(node instanceof AudioletGroup){node=node.inputs[input||0];input=0;}
var outputPin=this.outputs[output||0];var inputPin=node.inputs[input||0];inputPin.disconnect(outputPin);outputPin.disconnect(inputPin);this.audiolet.device.needTraverse=true;};AudioletNode.prototype.setNumberOfOutputChannels=function(output,numberOfChannels){this.outputs[output].numberOfChannels=numberOfChannels;};AudioletNode.prototype.linkNumberOfOutputChannels=function(output,input){this.outputs[output].linkNumberOfChannels(this.inputs[input]);};AudioletNode.prototype.tick=function(){this.createInputSamples();this.createOutputSamples();this.generate();};AudioletNode.prototype.traverse=function(nodes){if(nodes.indexOf(this)==-1){nodes.push(this);nodes=this.traverseParents(nodes);}
return nodes;};AudioletNode.prototype.traverseParents=function(nodes){var numberOfInputs=this.inputs.length;for(var i=0;i<numberOfInputs;i++){var input=this.inputs[i];var numberOfStreams=input.connectedFrom.length;for(var j=0;j<numberOfStreams;j++){nodes=input.connectedFrom[j].node.traverse(nodes);}}
return nodes;};AudioletNode.prototype.generate=function(){};AudioletNode.prototype.createInputSamples=function(){var numberOfInputs=this.inputs.length;for(var i=0;i<numberOfInputs;i++){var input=this.inputs[i];var numberOfInputChannels=0;for(var j=0;j<input.connectedFrom.length;j++){var output=input.connectedFrom[j];for(var k=0;k<output.samples.length;k++){var sample=output.samples[k];if(k<numberOfInputChannels){input.samples[k]+=sample;}
else{input.samples[k]=sample;numberOfInputChannels+=1;}}}
if(input.samples.length>numberOfInputChannels){input.samples=input.samples.slice(0,numberOfInputChannels);}}};AudioletNode.prototype.createOutputSamples=function(){var numberOfOutputs=this.outputs.length;for(var i=0;i<numberOfOutputs;i++){var output=this.outputs[i];var numberOfChannels=output.getNumberOfChannels();if(output.samples.length==numberOfChannels){continue;}
else if(output.samples.length>numberOfChannels){output.samples=output.samples.slice(0,numberOfChannels);continue;}
for(var j=output.samples.length;j<numberOfChannels;j++){output.samples[j]=0;}}};AudioletNode.prototype.remove=function(){var numberOfInputs=this.inputs.length;for(var i=0;i<numberOfInputs;i++){var input=this.inputs[i];var numberOfStreams=input.connectedFrom.length;for(var j=0;j<numberOfStreams;j++){var outputPin=input.connectedFrom[j];var output=outputPin.node;output.disconnect(this,outputPin.index,i);}}
var numberOfOutputs=this.outputs.length;for(var i=0;i<numberOfOutputs;i++){var output=this.outputs[i];var numberOfStreams=output.connectedTo.length;for(var j=0;j<numberOfStreams;j++){var inputPin=output.connectedTo[j];var input=inputPin.node;this.disconnect(input,i,inputPin.index);}}};/*!
  @depends AudioletNode.js
 */function AudioletDevice(audiolet,sampleRate,numberOfChannels,bufferSize){AudioletNode.call(this,audiolet,1,0);this.sink=Sink(this.tick.bind(this),numberOfChannels,bufferSize,sampleRate);this.sampleRate=this.sink.sampleRate;this.numberOfChannels=this.sink.channelCount;this.bufferSize=this.sink.preBufferSize;this.writePosition=0;this.buffer=null;this.paused=false;this.needTraverse=true;this.nodes=[];}
extend(AudioletDevice,AudioletNode);AudioletDevice.prototype.tick=function(buffer,numberOfChannels){if(!this.paused){var input=this.inputs[0];var samplesNeeded=buffer.length/numberOfChannels;for(var i=0;i<samplesNeeded;i++){if(this.needTraverse){this.nodes=this.traverse([]);this.needTraverse=false;}
for(var j=this.nodes.length-1;j>0;j--){this.nodes[j].tick();}
this.createInputSamples();for(var j=0;j<numberOfChannels;j++){buffer[i*numberOfChannels+j]=input.samples[j];}
this.writePosition+=1;}}};AudioletDevice.prototype.getPlaybackTime=function(){return this.sink.getPlaybackTime();};AudioletDevice.prototype.getWriteTime=function(){return this.writePosition;};AudioletDevice.prototype.pause=function(){this.paused=true;};AudioletDevice.prototype.play=function(){this.paused=false;};AudioletDevice.prototype.toString=function(){return'Audio Output Device';};var AudioletInput=function(node,index){this.node=node;this.index=index;this.connectedFrom=[];this.samples=[];};AudioletInput.prototype.connect=function(output){this.connectedFrom.push(output);};AudioletInput.prototype.disconnect=function(output){var numberOfStreams=this.connectedFrom.length;for(var i=0;i<numberOfStreams;i++){if(output==this.connectedFrom[i]){this.connectedFrom.splice(i,1);break;}}
if(this.connectedFrom.length==0){this.samples=[];}};AudioletInput.prototype.toString=function(){return this.node.toString()+'Input #'+this.index;};var Audiolet=function(sampleRate,numberOfChannels,bufferSize){this.output=new AudioletDestination(this,sampleRate,numberOfChannels,bufferSize);};var AudioletOutput=function(node,index){this.node=node;this.index=index;this.connectedTo=[];this.samples=[];this.linkedInput=null;this.numberOfChannels=1;};AudioletOutput.prototype.connect=function(input){this.connectedTo.push(input);};AudioletOutput.prototype.disconnect=function(input){var numberOfStreams=this.connectedTo.length;for(var i=0;i<numberOfStreams;i++){if(input==this.connectedTo[i]){this.connectedTo.splice(i,1);break;}}};AudioletOutput.prototype.linkNumberOfChannels=function(input){this.linkedInput=input;};AudioletOutput.prototype.unlinkNumberOfChannels=function(){this.linkedInput=null;};AudioletOutput.prototype.getNumberOfChannels=function(){if(this.linkedInput&&this.linkedInput.connectedFrom.length){return(this.linkedInput.samples.length);}
return(this.numberOfChannels);};AudioletOutput.prototype.toString=function(){return this.node.toString()+'Output #'+this.index+' - ';};var AudioletParameter=function(node,inputIndex,value){this.node=node;if(typeof inputIndex!='undefined'&&inputIndex!=null){this.input=node.inputs[inputIndex];}
else{this.input=null;}
this.value=value||0;};AudioletParameter.prototype.isStatic=function(){return(this.input.samples.length==0);};AudioletParameter.prototype.isDynamic=function(){return(this.input.samples.length>0);};AudioletParameter.prototype.setValue=function(value){this.value=value;};AudioletParameter.prototype.getValue=function(){if(this.input!=null&&this.input.samples.length>0){return this.input.samples[0];}
else{return this.value;}};function extend(subclass,superclass){function Dummy(){}
Dummy.prototype=superclass.prototype;subclass.prototype=new Dummy();subclass.prototype.constructor=subclass;}/*!
  @depends ../core/AudioletNode.js
 */var ParameterNode=function(audiolet,value){AudioletNode.call(this,audiolet,1,1);this.parameter=new AudioletParameter(this,0,value);};extend(ParameterNode,AudioletNode);ParameterNode.prototype.generate=function(){this.outputs[0].samples[0]=this.parameter.getValue();};ParameterNode.prototype.toString=function(){return'Parameter Node';};/*!
  @depends AudioletNode.js
 */var PassThroughNode=function(audiolet,numberOfInputs,numberOfOutputs){AudioletNode.call(this,audiolet,numberOfInputs,numberOfOutputs);};extend(PassThroughNode,AudioletNode);PassThroughNode.prototype.createOutputSamples=function(){var numberOfOutputs=this.outputs.length;for(var i=0;i<numberOfOutputs;i++){var input=this.inputs[i];var output=this.outputs[i];if(input&&input.samples.length!=0){output.samples=input.samples;}
else{var numberOfChannels=output.getNumberOfChannels();if(output.samples.length==numberOfChannels){continue;}
else if(output.samples.length>numberOfChannels){output.samples=output.samples.slice(0,numberOfChannels);continue;}
for(var j=output.samples.length;j<numberOfChannels;j++){output.samples[j]=0;}}}};PassThroughNode.prototype.toString=function(){return'Pass Through Node';};var PriorityQueue=function(array,compare){if(compare){this.compare=compare;}
if(array){this.heap=array;for(var i=0;i<Math.floor(this.heap.length/2);i++){this.siftUp(i);}}
else{this.heap=[];}};PriorityQueue.prototype.push=function(item){this.heap.push(item);this.siftDown(0,this.heap.length-1);};PriorityQueue.prototype.pop=function(){var lastElement,returnItem;lastElement=this.heap.pop();if(this.heap.length){var returnItem=this.heap[0];this.heap[0]=lastElement;this.siftUp(0);}
else{returnItem=lastElement;}
return(returnItem);};PriorityQueue.prototype.peek=function(){return(this.heap[0]);};PriorityQueue.prototype.isEmpty=function(){return(this.heap.length==0);};PriorityQueue.prototype.siftDown=function(startPosition,position){var newItem=this.heap[position];while(position>startPosition){var parentPosition=(position-1)>>1;var parent=this.heap[parentPosition];if(this.compare(newItem,parent)){this.heap[position]=parent;position=parentPosition;continue;}
break;}
this.heap[position]=newItem;};PriorityQueue.prototype.siftUp=function(position){var endPosition=this.heap.length;var startPosition=position;var newItem=this.heap[position];var childPosition=2*position+1;while(childPosition<endPosition){var rightPosition=childPosition+1;if(rightPosition<endPosition&&!this.compare(this.heap[childPosition],this.heap[rightPosition])){childPosition=rightPosition;}
this.heap[position]=this.heap[childPosition];position=childPosition;childPosition=2*position+1;}
this.heap[position]=newItem;this.siftDown(startPosition,position);};PriorityQueue.prototype.compare=function(a,b){return(a<b);};/*!
  @depends PassThroughNode.js
 */var Scheduler=function(audiolet,bpm){PassThroughNode.call(this,audiolet,1,1);this.linkNumberOfOutputChannels(0,0);this.bpm=bpm||120;this.queue=new PriorityQueue(null,function(a,b){return(a.time<b.time);});this.time=0;this.beat=0;this.beatInBar=0;this.bar=0;this.seconds=0;this.beatsPerBar=0;this.lastBeatTime=0;this.beatLength=60/this.bpm*this.audiolet.device.sampleRate;};extend(Scheduler,PassThroughNode);Scheduler.prototype.setTempo=function(bpm){this.bpm=bpm;this.beatLength=60/this.bpm*this.audiolet.device.sampleRate;};Scheduler.prototype.addRelative=function(beats,callback){var event={};event.callback=callback;event.time=this.time+beats*this.beatLength;this.queue.push(event);return event;};Scheduler.prototype.addAbsolute=function(beat,callback){if(beat<this.beat||beat==this.beat&&this.time>this.lastBeatTime){return null;}
var event={};event.callback=callback;event.time=this.lastBeatTime+(beat-this.beat)*this.beatLength;this.queue.push(event);return event;};Scheduler.prototype.play=function(patterns,durationPattern,callback){var event={};event.patterns=patterns;event.durationPattern=durationPattern;event.callback=callback;event.time=this.audiolet.device.getWriteTime();this.queue.push(event);return event;};Scheduler.prototype.playAbsolute=function(beat,patterns,durationPattern,callback){if(beat<this.beat||beat==this.beat&&this.time>this.lastBeatTime){return null;}
var event={};event.patterns=patterns;event.durationPattern=durationPattern;event.callback=callback;event.time=this.lastBeatTime+(beat-this.beat)*this.beatLength;this.queue.push(event);return event;};Scheduler.prototype.remove=function(event){var idx=this.queue.heap.indexOf(event);if(idx!=-1){this.queue.heap.splice(idx,1);this.queue=new PriorityQueue(this.queue.heap,function(a,b){return(a.time<b.time);});}};Scheduler.prototype.stop=function(event){this.remove(event);};Scheduler.prototype.tick=function(){PassThroughNode.prototype.tick.call(this);this.tickClock();while(!this.queue.isEmpty()&&this.queue.peek().time<=this.time){var event=this.queue.pop();this.processEvent(event);}};Scheduler.prototype.tickClock=function(){this.time+=1;this.seconds=this.time/this.audiolet.device.sampleRate;if(this.time>=this.lastBeatTime+this.beatLength){this.beat+=1;this.beatInBar+=1;if(this.beatInBar==this.beatsPerBar){this.bar+=1;this.beatInBar=0;}
this.lastBeatTime+=this.beatLength;}};Scheduler.prototype.processEvent=function(event){var durationPattern=event.durationPattern;if(durationPattern){var args=[];var patterns=event.patterns;var numberOfPatterns=patterns.length;for(var i=0;i<numberOfPatterns;i++){var pattern=patterns[i];var value=pattern.next();if(value!=null){args.push(value);}
else{return;}}
event.callback.apply(null,args);var duration;if(durationPattern instanceof Pattern){duration=durationPattern.next();}
else{duration=durationPattern;}
if(duration){event.time+=duration*this.beatLength;this.queue.push(event);}}
else{event.callback();}};Scheduler.prototype.toString=function(){return'Scheduler';};var Int8Array,Uint8Array,Int16Array,Uint16Array;var Int32Array,Uint32Array,Float32Array,Float64Array;var types=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var original,shim;for(var i=0;i<types.length;++i){if(types[i]){if(types[i].prototype.slice===undefined){original='subarray';shim='slice';}
else if(types[i].prototype.subarray===undefined){original='slice';shim='subarray';}
Object.defineProperty(types[i].prototype,shim,{value:types[i].prototype[original],enumerable:false});}}/*!
  @depends ../core/AudioletNode.js
 */var Envelope=function(audiolet,gate,levels,times,releaseStage,onComplete){AudioletNode.call(this,audiolet,1,1);this.gate=new AudioletParameter(this,0,gate||1);this.levels=[];for(var i=0;i<levels.length;i++){this.levels.push(new AudioletParameter(this,null,levels[i]));}
this.times=[];for(var i=0;i<times.length;i++){this.times.push(new AudioletParameter(this,null,times[i]));}
this.releaseStage=releaseStage;this.onComplete=onComplete;this.stage=null;this.time=null;this.changeTime=null;this.level=this.levels[0].getValue();this.delta=0;this.gateOn=false;};extend(Envelope,AudioletNode);Envelope.prototype.generate=function(){var gate=this.gate.getValue();var stageChanged=false;if(gate&&!this.gateOn){this.gateOn=true;this.stage=0;this.time=0;this.delta=0;this.level=this.levels[0].getValue();if(this.stage!=this.releaseStage){stageChanged=true;}}
if(this.gateOn&&!gate){this.gateOn=false;if(this.releaseStage!=null){this.stage=this.releaseStage;stageChanged=true;}}
if(this.changeTime){this.time+=1;if(this.time>=this.changeTime){this.stage+=1;if(this.stage!=this.releaseStage){stageChanged=true;}
else{this.changeTime=null;this.delta=0;}}}
if(stageChanged){if(this.stage!=this.times.length){this.delta=this.calculateDelta(this.stage,this.level);this.changeTime=this.calculateChangeTime(this.stage,this.time);}
else{if(this.onComplete){this.onComplete();}
this.stage=null;this.time=null;this.changeTime=null;this.delta=0;}}
this.level+=this.delta;this.outputs[0].samples[0]=this.level;};Envelope.prototype.calculateDelta=function(stage,level){var delta=this.levels[stage+1].getValue()-level;var stageTime=this.times[stage].getValue()*this.audiolet.device.sampleRate;return(delta/stageTime);};Envelope.prototype.calculateChangeTime=function(stage,time){var stageTime=this.times[stage].getValue()*this.audiolet.device.sampleRate;return(time+stageTime);};Envelope.prototype.toString=function(){return'Envelope';};/*!
  @depends Envelope.js
 */var ADSREnvelope=function(audiolet,gate,attack,decay,sustain,release,onComplete){var levels=[0,1,sustain,0];var times=[attack,decay,release];Envelope.call(this,audiolet,gate,levels,times,2,onComplete);this.attack=this.times[0];this.decay=this.times[1];this.sustain=this.levels[2];this.release=this.levels[2];};extend(ADSREnvelope,Envelope);ADSREnvelope.prototype.toString=function(){return'ADSR Envelope';};/*!
  @depends ../core/AudioletNode.js
 */var BiquadFilter=function(audiolet,frequency){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.frequency=new AudioletParameter(this,1,frequency||22100);this.lastFrequency=null;this.xValues=[];this.yValues=[];this.b0=0;this.b1=0;this.b2=0;this.a0=0;this.a1=0;this.a2=0;};extend(BiquadFilter,AudioletNode);BiquadFilter.prototype.calculateCoefficients=function(frequency){};BiquadFilter.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0]
var xValueArray=this.xValues;var yValueArray=this.yValues;var frequency=this.frequency.getValue();if(frequency!=this.lastFrequency){this.calculateCoefficients(frequency);this.lastFrequency=frequency;}
var a0=this.a0;var a1=this.a1;var a2=this.a2;var b0=this.b0;var b1=this.b1;var b2=this.b2;var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){if(i>=xValueArray.length){xValueArray.push([0,0]);yValueArray.push([0,0]);}
var xValues=xValueArray[i];var x1=xValues[0];var x2=xValues[1];var yValues=yValueArray[i];var y1=yValues[0];var y2=yValues[1];var x0=input.samples[i];var y0=(b0/a0)*x0+
(b1/a0)*x1+
(b2/a0)*x2-
(a1/a0)*y1-
(a2/a0)*y2;output.samples[i]=y0;xValues[0]=x0;xValues[1]=x1;yValues[0]=y0;yValues[1]=y1;}};BiquadFilter.prototype.toString=function(){return'Biquad Filter';};/*!
  @depends BiquadFilter.js
 */var AllPassFilter=function(audiolet,frequency){BiquadFilter.call(this,audiolet,frequency);};extend(AllPassFilter,BiquadFilter);AllPassFilter.prototype.calculateCoefficients=function(frequency){var w0=2*Math.PI*frequency/this.audiolet.device.sampleRate;var cosw0=Math.cos(w0);var sinw0=Math.sin(w0);var alpha=sinw0/(2/Math.sqrt(2));this.b0=1-alpha;this.b1=-2*cosw0;this.b2=1+alpha;this.a0=1+alpha;this.a1=-2*cosw0;this.a2=1-alpha;};AllPassFilter.prototype.toString=function(){return'All Pass Filter';};/*!
  @depends ../core/AudioletNode.js
 */var Amplitude=function(audiolet,attack,release){AudioletNode.call(this,audiolet,3,1);this.linkNumberOfOutputChannels(0,0);this.followers=[];this.attack=new AudioletParameter(this,1,attack||0.01);this.release=new AudioletParameter(this,2,release||0.01);};extend(Amplitude,AudioletNode);Amplitude.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var followers=this.followers;var numberOfFollowers=followers.length;var sampleRate=this.audiolet.device.sampleRate;var attack=this.attack.getValue();attack=Math.pow(0.01,1/(attack*sampleRate));var release=this.release.getValue();release=Math.pow(0.01,1/(release*sampleRate));var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){if(i>=numberOfFollowers){followers.push(0);}
var follower=followers[i];var value=Math.abs(input.samples[i]);if(value>follower){follower=attack*(follower-value)+value;}
else{follower=release*(follower-value)+value;}
output.samples[i]=follower;followers[i]=follower;}};Amplitude.prototype.toString=function(){return('Amplitude');};/*!
  @depends ../core/PassThroughNode.js
 */var BadValueDetector=function(audiolet,callback){PassThroughNode.call(this,audiolet,1,1);this.linkNumberOfOutputChannels(0,0);if(callback){this.callback=callback;}};extend(BadValueDetector,PassThroughNode);BadValueDetector.prototype.callback=function(value,channel){console.error(value+' detected at channel '+channel);};BadValueDetector.prototype.generate=function(){var input=this.inputs[0];var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){var value=input.samples[i];if(typeof value=='undefined'||value==null||isNaN(value)||value==Infinity||value==-Infinity){this.callback(value,i);}}};BadValueDetector.prototype.toString=function(){return'Bad Value Detector';};/*!
  @depends BiquadFilter.js
 */var BandPassFilter=function(audiolet,frequency){BiquadFilter.call(this,audiolet,frequency);};extend(BandPassFilter,BiquadFilter);BandPassFilter.prototype.calculateCoefficients=function(frequency){var w0=2*Math.PI*frequency/this.audiolet.device.sampleRate;var cosw0=Math.cos(w0);var sinw0=Math.sin(w0);var alpha=sinw0/(2/Math.sqrt(2));this.b0=alpha;this.b1=0;this.b2=-alpha;this.a0=1+alpha;this.a1=-2*cosw0;this.a2=1-alpha;};BandPassFilter.prototype.toString=function(){return'Band Pass Filter';};/*!
  @depends BiquadFilter.js
 */var BandRejectFilter=function(audiolet,frequency){BiquadFilter.call(this,audiolet,frequency);};extend(BandRejectFilter,BiquadFilter);BandRejectFilter.prototype.calculateCoefficients=function(frequency){var w0=2*Math.PI*frequency/this.audiolet.device.sampleRate;var cosw0=Math.cos(w0);var sinw0=Math.sin(w0);var alpha=sinw0/(2/Math.sqrt(2));this.b0=1;this.b1=-2*cosw0;this.b2=1;this.a0=1+alpha;this.a1=-2*cosw0;this.a2=1-alpha;};BandRejectFilter.prototype.toString=function(){return'Band Reject Filter';};/*!
  @depends ../core/AudioletNode.js
 */var BitCrusher=function(audiolet,bits){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.bits=new AudioletParameter(this,1,bits);};extend(BitCrusher,AudioletNode);BitCrusher.prototype.generate=function(){var input=this.inputs[0];var maxValue=Math.pow(2,this.bits.getValue())-1;var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){this.outputs[0].samples[i]=Math.floor(input.samples[i]*maxValue)/maxValue;}};BitCrusher.prototype.toString=function(){return'BitCrusher';};/*!
  @depends ../core/AudioletNode.js
 */var BufferPlayer=function(audiolet,buffer,playbackRate,startPosition,loop,onComplete){AudioletNode.call(this,audiolet,3,1);this.buffer=buffer;this.setNumberOfOutputChannels(0,this.buffer.numberOfChannels);this.position=startPosition||0;this.playbackRate=new AudioletParameter(this,0,playbackRate||1);this.restartTrigger=new AudioletParameter(this,1,0);this.startPosition=new AudioletParameter(this,2,startPosition||0);this.loop=new AudioletParameter(this,3,loop||0);this.onComplete=onComplete;this.restartTriggerOn=false;this.playing=true;};extend(BufferPlayer,AudioletNode);BufferPlayer.prototype.generate=function(){var output=this.outputs[0];var numberOfChannels=output.samples.length;if(this.buffer.length==0||!this.playing){for(var i=0;i<numberOfChannels;i++){output.samples[i]=0;}
return;}
var playbackRate=this.playbackRate.getValue();var restartTrigger=this.restartTrigger.getValue();var startPosition=this.startPosition.getValue();var loop=this.loop.getValue();if(restartTrigger>0&&!this.restartTriggerOn){this.position=startPosition;this.restartTriggerOn=true;this.playing=true;}
if(restartTrigger<=0&&this.restartTriggerOn){this.restartTriggerOn=false;}
var numberOfChannels=this.buffer.channels.length;for(var i=0;i<numberOfChannels;i++){var inputChannel=this.buffer.getChannelData(i);output.samples[i]=inputChannel[Math.floor(this.position)];}
this.position+=playbackRate;if(this.position>=this.buffer.length){if(loop){this.position%=this.buffer.length;}
else{this.playing=false;if(this.onComplete){this.onComplete();}}}};BufferPlayer.prototype.toString=function(){return('Buffer player');};/*!
  @depends ../core/AudioletNode.js
 */var CombFilter=function(audiolet,maximumDelayTime,delayTime,decayTime){AudioletNode.call(this,audiolet,3,1);this.linkNumberOfOutputChannels(0,0);this.maximumDelayTime=maximumDelayTime;this.delayTime=new AudioletParameter(this,1,delayTime||1);this.decayTime=new AudioletParameter(this,2,decayTime);this.buffers=[];this.readWriteIndex=0;};extend(CombFilter,AudioletNode);CombFilter.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var sampleRate=this.audiolet.device.sampleRate;var delayTime=this.delayTime.getValue()*sampleRate;var decayTime=this.decayTime.getValue()*sampleRate;var feedback=Math.exp(-3*delayTime/decayTime);var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){if(i>=this.buffers.length){var bufferSize=this.maximumDelayTime*sampleRate;this.buffers.push(new Float32Array(bufferSize));}
var buffer=this.buffers[i];var outputValue=buffer[this.readWriteIndex];output.samples[i]=outputValue;buffer[this.readWriteIndex]=input.samples[i]+feedback*outputValue;}
this.readWriteIndex+=1;if(this.readWriteIndex>=delayTime){this.readWriteIndex=0;}};CombFilter.prototype.toString=function(){return'Comb Filter';};/*!
  @depends ../core/AudioletNode.js
 */var Sine=function(audiolet,frequency){AudioletNode.call(this,audiolet,1,1);this.frequency=new AudioletParameter(this,0,frequency||440);this.phase=0;};extend(Sine,AudioletNode);Sine.prototype.generate=function(){var output=this.outputs[0];var frequency=this.frequency.getValue();var sampleRate=this.audiolet.device.sampleRate;output.samples[0]=Math.sin(this.phase);this.phase+=2*Math.PI*frequency/sampleRate;if(this.phase>2*Math.PI){this.phase%=2*Math.PI;}};Sine.prototype.toString=function(){return'Sine';};/*!
  @depends ../core/AudioletNode.js
  @depends Sine.js
 */var CrossFade=function(audiolet,position){AudioletNode.call(this,audiolet,3,1);this.linkNumberOfOutputChannels(0,0);this.position=new AudioletParameter(this,2,position||0.5);};extend(CrossFade,AudioletNode);CrossFade.prototype.generate=function(){var inputA=this.inputs[0];var inputB=this.inputs[1];var output=this.outputs[0];var position=this.position.getValue();var scaledPosition=position*Math.PI/2;var gainA=Math.cos(scaledPosition);var gainB=Math.sin(scaledPosition);var numberOfChannels=output.samples.length;for(var i=0;i<numberOfChannels;i++){var valueA=inputA.samples[i]||0;var valueB=inputB.samples[i]||0;output.samples[i]=valueA*gainA+valueB*gainB;}};CrossFade.prototype.toString=function(){return'Cross Fader';};/*!
  @depends ../core/AudioletNode.js
 */var DampedCombFilter=function(audiolet,maximumDelayTime,delayTime,decayTime,damping){AudioletNode.call(this,audiolet,4,1);this.linkNumberOfOutputChannels(0,0);this.maximumDelayTime=maximumDelayTime;this.delayTime=new AudioletParameter(this,1,delayTime||1);this.decayTime=new AudioletParameter(this,2,decayTime);this.damping=new AudioletParameter(this,3,damping);var bufferSize=maximumDelayTime*this.audiolet.device.sampleRate;this.buffers=[];this.readWriteIndex=0;this.filterStores=[];};extend(DampedCombFilter,AudioletNode);DampedCombFilter.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var sampleRate=this.audiolet.device.sampleRate;var delayTime=this.delayTime.getValue()*sampleRate;var decayTime=this.decayTime.getValue()*sampleRate;var damping=this.damping.getValue();var feedback=Math.exp(-3*delayTime/decayTime);var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){if(i>=this.buffers.length){var bufferSize=this.maximumDelayTime*sampleRate;this.buffers.push(new Float32Array(bufferSize));}
if(i>=this.filterStores.length){this.filterStores.push(0);}
var buffer=this.buffers[i];var filterStore=this.filterStores[i];var outputValue=buffer[this.readWriteIndex];filterStore=(outputValue*(1-damping))+
(filterStore*damping);output.samples[i]=outputValue;buffer[this.readWriteIndex]=input.samples[i]+
feedback*filterStore;this.filterStores[i]=filterStore;}
this.readWriteIndex+=1;if(this.readWriteIndex>=delayTime){this.readWriteIndex=0;}};DampedCombFilter.prototype.toString=function(){return'Damped Comb Filter';};/*!
  @depends ../core/AudioletNode.js
 */var DCFilter=function(audiolet,coefficient){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.coefficient=new AudioletParameter(this,1,coefficient||0.995);this.xValues=[];this.yValues=[];};extend(DCFilter,AudioletNode);DCFilter.prototype.generate=function(){var coefficient=this.coefficient.getValue();var input=this.inputs[0];var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){if(i>=this.xValues.length){this.xValues.push(0);}
if(i>=this.yValues.length){this.yValues.push(0);}
var x0=input.samples[i];var y0=x0-this.xValues[i]+coefficient*this.yValues[i];this.outputs[0].samples[i]=y0;this.xValues[i]=x0;this.yValues[i]=y0;}};DCFilter.prototype.toString=function(){return'DC Filter';};/*!
  @depends ../core/AudioletNode.js
 */var Delay=function(audiolet,maximumDelayTime,delayTime){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.maximumDelayTime=maximumDelayTime;this.delayTime=new AudioletParameter(this,1,delayTime||1);var bufferSize=maximumDelayTime*this.audiolet.device.sampleRate;this.buffers=[];this.readWriteIndex=0;};extend(Delay,AudioletNode);Delay.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var sampleRate=this.audiolet.device.sampleRate;var delayTime=this.delayTime.getValue()*sampleRate;var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){if(i>=this.buffers.length){var bufferSize=this.maximumDelayTime*sampleRate;this.buffers.push(new Float32Array(bufferSize));}
var buffer=this.buffers[i];output.samples[i]=buffer[this.readWriteIndex];buffer[this.readWriteIndex]=input.samples[i];}
this.readWriteIndex+=1;if(this.readWriteIndex>=delayTime){this.readWriteIndex=0;}};Delay.prototype.toString=function(){return'Delay';};/*!
  @depends ../core/AudioletNode.js
 */var DiscontinuityDetector=function(audiolet,threshold,callback){AudioletNode.call(this,audiolet,1,1);this.linkNumberOfOutputChannels(0,0);this.threshold=threshold||0.2;if(callback){this.callback=callback;}
this.lastValues=[];};extend(DiscontinuityDetector,AudioletNode);DiscontinuityDetector.prototype.callback=function(size,channel){console.error('Discontinuity of '+size+' detected on channel '+
channel);};DiscontinuityDetector.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){if(i>=this.lastValues.length){this.lastValues.push(0);}
var value=input.samples[i];var diff=Math.abs(this.lastValues[i]-value);if(diff>this.threshold){this.callback(diff,i);}
this.lastValues[i]=value;}};DiscontinuityDetector.prototype.toString=function(){return'Discontinuity Detector';};/*!
  @depends ../core/AudioletNode.js
 */var FeedbackDelay=function(audiolet,maximumDelayTime,delayTime,feedback,mix){AudioletNode.call(this,audiolet,4,1);this.linkNumberOfOutputChannels(0,0);this.maximumDelayTime=maximumDelayTime;this.delayTime=new AudioletParameter(this,1,delayTime||1);this.feedback=new AudioletParameter(this,2,feedback||0.5);this.mix=new AudioletParameter(this,3,mix||1);var bufferSize=maximumDelayTime*this.audiolet.device.sampleRate;this.buffers=[];this.readWriteIndex=0;};extend(FeedbackDelay,AudioletNode);FeedbackDelay.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var sampleRate=this.audiolet.output.device.sampleRate;var delayTime=this.delayTime.getValue()*sampleRate;var feedback=this.feedback.getValue();var mix=this.mix.getValue();var numberOfChannels=input.samples.length;var numberOfBuffers=this.buffers.length;for(var i=0;i<numberOfChannels;i++){if(i>=numberOfBuffers){var bufferSize=this.maximumDelayTime*sampleRate;this.buffers.push(new Float32Array(bufferSize));}
var buffer=this.buffers[i];var inputSample=input.samples[i];var bufferSample=buffer[this.readWriteIndex];output.samples[i]=mix*bufferSample+(1-mix)*inputSample;buffer[this.readWriteIndex]=inputSample+feedback*bufferSample;}
this.readWriteIndex+=1;if(this.readWriteIndex>=delayTime){this.readWriteIndex=0;}};FeedbackDelay.prototype.toString=function(){return'Feedback Delay';};/*!
  @depends ../core/AudioletNode.js
 */var FFT=function(audiolet,bufferSize){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.bufferSize=bufferSize;this.readWriteIndex=0;this.buffer=new Float32Array(this.bufferSize);this.realBuffer=new Float32Array(this.bufferSize);this.imaginaryBuffer=new Float32Array(this.bufferSize);this.reverseTable=new Uint32Array(this.bufferSize);this.calculateReverseTable();};extend(FFT,AudioletNode);FFT.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];if(input.samples.length==0){return;}
this.buffer[this.readWriteIndex]=input.samples[0];output.samples[0]=[this.realBuffer[this.readWriteIndex],this.imaginaryBuffer[this.readWriteIndex]];this.readWriteIndex+=1;if(this.readWriteIndex>=this.bufferSize){this.transform();this.readWriteIndex=0;}};FFT.prototype.calculateReverseTable=function(){var limit=1;var bit=this.bufferSize>>1;while(limit<this.bufferSize){for(var i=0;i<limit;i++){this.reverseTable[i+limit]=this.reverseTable[i]+bit;}
limit=limit<<1;bit=bit>>1;}};FFT.prototype.transform=function(){for(var i=0;i<this.bufferSize;i++){this.realBuffer[i]=this.buffer[this.reverseTable[i]];this.imaginaryBuffer[i]=0;}
var halfSize=1;while(halfSize<this.bufferSize){var phaseShiftStepReal=Math.cos(-Math.PI/halfSize);var phaseShiftStepImag=Math.sin(-Math.PI/halfSize);var currentPhaseShiftReal=1;var currentPhaseShiftImag=0;for(var fftStep=0;fftStep<halfSize;fftStep++){var i=fftStep;while(i<this.bufferSize){var off=i+halfSize;var tr=(currentPhaseShiftReal*this.realBuffer[off])-
(currentPhaseShiftImag*this.imaginaryBuffer[off]);var ti=(currentPhaseShiftReal*this.imaginaryBuffer[off])+
(currentPhaseShiftImag*this.realBuffer[off]);this.realBuffer[off]=this.realBuffer[i]-tr;this.imaginaryBuffer[off]=this.imaginaryBuffer[i]-ti;this.realBuffer[i]+=tr;this.imaginaryBuffer[i]+=ti;i+=halfSize<<1;}
var tmpReal=currentPhaseShiftReal;currentPhaseShiftReal=(tmpReal*phaseShiftStepReal)-
(currentPhaseShiftImag*phaseShiftStepImag);currentPhaseShiftImag=(tmpReal*phaseShiftStepImag)+
(currentPhaseShiftImag*phaseShiftStepReal);}
halfSize=halfSize<<1;}};FFT.prototype.toString=function(){return'FFT';};/*!
  @depends ../core/AudioletNode.js
 */var Multiply=function(audiolet,value){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.value=new AudioletParameter(this,1,value||1);};extend(Multiply,AudioletNode);Multiply.prototype.generate=function(){var value=this.value.getValue();var input=this.inputs[0];var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){this.outputs[0].samples[i]=input.samples[i]*value;}};Multiply.prototype.toString=function(){return'Multiply';};/*!
  @depends ../operators/Multiply.js
 */var Gain=function(audiolet,gain){Multiply.call(this,audiolet,gain);this.gain=this.value;};extend(Gain,Multiply);Gain.prototype.toString=function(){return('Gain');};/*!
  @depends BiquadFilter.js
 */var HighPassFilter=function(audiolet,frequency){BiquadFilter.call(this,audiolet,frequency);};extend(HighPassFilter,BiquadFilter);HighPassFilter.prototype.calculateCoefficients=function(frequency){var w0=2*Math.PI*frequency/this.audiolet.device.sampleRate;var cosw0=Math.cos(w0);var sinw0=Math.sin(w0);var alpha=sinw0/(2/Math.sqrt(2));this.b0=(1+cosw0)/2;this.b1=-(1+cosw0);this.b2=this.b0;this.a0=1+alpha;this.a1=-2*cosw0;this.a2=1-alpha;};HighPassFilter.prototype.toString=function(){return'High Pass Filter';};/*!
  @depends ../core/AudioletNode.js
 */var IFFT=function(audiolet,bufferSize){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.bufferSize=bufferSize;this.readWriteIndex=0;this.buffer=new Float32Array(this.bufferSize);this.realBuffer=new Float32Array(this.bufferSize);this.imaginaryBuffer=new Float32Array(this.bufferSize);this.reverseTable=new Uint32Array(this.bufferSize);this.calculateReverseTable();this.reverseReal=new Float32Array(this.bufferSize);this.reverseImaginary=new Float32Array(this.bufferSize);};extend(IFFT,AudioletNode);IFFT.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];if(!input.samples.length){return;}
var values=input.samples[0];this.realBuffer[this.readWriteIndex]=values[0];this.imaginaryBuffer[this.readWriteIndex]=values[1];output.samples[0]=this.buffer[this.readWriteIndex];this.readWriteIndex+=1;if(this.readWriteIndex>=this.bufferSize){this.transform();this.readWriteIndex=0;}};IFFT.prototype.calculateReverseTable=function(){var limit=1;var bit=this.bufferSize>>1;while(limit<this.bufferSize){for(var i=0;i<limit;i++){this.reverseTable[i+limit]=this.reverseTable[i]+bit;}
limit=limit<<1;bit=bit>>1;}};IFFT.prototype.transform=function(){var halfSize=1;for(var i=0;i<this.bufferSize;i++){this.imaginaryBuffer[i]*=-1;}
for(var i=0;i<this.bufferSize;i++){this.reverseReal[i]=this.realBuffer[this.reverseTable[i]];this.reverseImaginary[i]=this.imaginaryBuffer[this.reverseTable[i]];}
this.realBuffer.set(this.reverseReal);this.imaginaryBuffer.set(this.reverseImaginary);while(halfSize<this.bufferSize){var phaseShiftStepReal=Math.cos(-Math.PI/halfSize);var phaseShiftStepImag=Math.sin(-Math.PI/halfSize);var currentPhaseShiftReal=1;var currentPhaseShiftImag=0;for(var fftStep=0;fftStep<halfSize;fftStep++){i=fftStep;while(i<this.bufferSize){var off=i+halfSize;var tr=(currentPhaseShiftReal*this.realBuffer[off])-
(currentPhaseShiftImag*this.imaginaryBuffer[off]);var ti=(currentPhaseShiftReal*this.imaginaryBuffer[off])+
(currentPhaseShiftImag*this.realBuffer[off]);this.realBuffer[off]=this.realBuffer[i]-tr;this.imaginaryBuffer[off]=this.imaginaryBuffer[i]-ti;this.realBuffer[i]+=tr;this.imaginaryBuffer[i]+=ti;i+=halfSize<<1;}
var tmpReal=currentPhaseShiftReal;currentPhaseShiftReal=(tmpReal*phaseShiftStepReal)-
(currentPhaseShiftImag*phaseShiftStepImag);currentPhaseShiftImag=(tmpReal*phaseShiftStepImag)+
(currentPhaseShiftImag*phaseShiftStepReal);}
halfSize=halfSize<<1;}
for(i=0;i<this.bufferSize;i++){this.buffer[i]=this.realBuffer[i]/this.bufferSize;}};IFFT.prototype.toString=function(){return'IFFT';};/*!
  @depends ../core/AudioletNode.js
 */var Lag=function(audiolet,value,lagTime){AudioletNode.call(this,audiolet,2,1);this.value=new AudioletParameter(this,0,value||0);this.lag=new AudioletParameter(this,1,lagTime||1);this.lastValue=0;this.log001=Math.log(0.001);};extend(Lag,AudioletNode);Lag.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var sampleRate=this.audiolet.device.sampleRate;var value=this.value.getValue();var lag=this.lag.getValue();var coefficient=Math.exp(this.log001/(lag*sampleRate));var outputValue=((1-coefficient)*value)+
(coefficient*this.lastValue);output.samples[0]=outputValue;this.lastValue=outputValue;};Lag.prototype.toString=function(){return'Lag';};/*!
  @depends ../core/AudioletGroup.js
 */var Limiter=function(audiolet,threshold,attack,release){AudioletNode.call(this,audiolet,4,1);this.linkNumberOfOutputChannels(0,0);this.threshold=new AudioletParameter(this,1,threshold||0.95);this.attack=new AudioletParameter(this,2,attack||0.01);this.release=new AudioletParameter(this,2,release||0.4);this.followers=[];};extend(Limiter,AudioletNode);Limiter.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var sampleRate=this.audiolet.device.sampleRate;var attack=Math.pow(0.01,1/(this.attack.getValue()*sampleRate));var release=Math.pow(0.01,1/(this.release.getValue()*sampleRate));var threshold=this.threshold.getValue();var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){if(i>=this.followers.length){this.followers.push(0);}
var follower=this.followers[i];var value=input.samples[i];var absValue=Math.abs(value);if(absValue>follower){follower=attack*(follower-absValue)+absValue;}
else{follower=release*(follower-absValue)+absValue;}
var diff=follower-threshold;if(diff>0){output.samples[i]=value/(1+diff);}
else{output.samples[i]=value;}
this.followers[i]=follower;}};Limiter.prototype.toString=function(){return'Limiter';};/*!
  @depends ../core/AudioletNode.js
 */var LinearCrossFade=function(audiolet,position){AudioletNode.call(this,audiolet,3,1);this.linkNumberOfOutputChannels(0,0);this.position=new AudioletParameter(this,2,position||0.5);};extend(LinearCrossFade,AudioletNode);LinearCrossFade.prototype.generate=function(){var inputA=this.inputs[0];var inputB=this.inputs[1];var output=this.outputs[0];var position=this.position.getValue();var gainA=1-position;var gainB=position;var numberOfChannels=output.samples.length;for(var i=0;i<numberOfChannels;i++){var valueA=inputA.samples[i]||0;var valueB=inputB.samples[i]||0;output.samples[i]=valueA*gainA+valueB*gainB;}};LinearCrossFade.prototype.toString=function(){return'Linear Cross Fader';};/*!
  @depends BiquadFilter.js
 */var LowPassFilter=function(audiolet,frequency){BiquadFilter.call(this,audiolet,frequency);};extend(LowPassFilter,BiquadFilter);LowPassFilter.prototype.calculateCoefficients=function(frequency){var w0=2*Math.PI*frequency/this.audiolet.device.sampleRate;var cosw0=Math.cos(w0);var sinw0=Math.sin(w0);var alpha=sinw0/(2/Math.sqrt(2));this.b0=(1-cosw0)/2;this.b1=1-cosw0;this.b2=this.b0;this.a0=1+alpha;this.a1=-2*cosw0;this.a2=1-alpha;};LowPassFilter.prototype.toString=function(){return'Low Pass Filter';};/*!
  @depends ../core/AudioletNode.js
 */var Pan=function(audiolet,pan){AudioletNode.call(this,audiolet,2,1);this.setNumberOfOutputChannels(0,2);if(pan==null){var pan=0.5;}
this.pan=new AudioletParameter(this,1,pan);};extend(Pan,AudioletNode);Pan.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var pan=this.pan.getValue();var value=input.samples[0]||0;var scaledPan=pan*Math.PI/2;output.samples[0]=value*Math.cos(scaledPan);output.samples[1]=value*Math.sin(scaledPan);};Pan.prototype.toString=function(){return'Stereo Panner';};/*!
  @depends Envelope.js
 */var PercussiveEnvelope=function(audiolet,gate,attack,release,onComplete){var levels=[0,1,0];var times=[attack,release];Envelope.call(this,audiolet,gate,levels,times,null,onComplete);this.attack=this.times[0];this.release=this.times[1];};extend(PercussiveEnvelope,Envelope);PercussiveEnvelope.prototype.toString=function(){return'Percussive Envelope';};/*!
  @depends ../core/AudioletNode.js
 */var Pulse=function(audiolet,frequency,pulseWidth){AudioletNode.call(this,audiolet,2,1);this.frequency=new AudioletParameter(this,0,frequency||440);this.pulseWidth=new AudioletParameter(this,1,pulseWidth||0.5);this.phase=0;};extend(Pulse,AudioletNode);Pulse.prototype.generate=function(){var pulseWidth=this.pulseWidth.getValue();this.outputs[0].samples[0]=(this.phase<pulseWidth)?1:-1;var frequency=this.frequency.getValue();var sampleRate=this.audiolet.device.sampleRate;this.phase+=frequency/sampleRate;if(this.phase>1){this.phase%=1;}};Pulse.prototype.toString=function(){return'Pulse';};/*!
  @depends ../core/AudioletNode.js
  @depends ../core/AudioletGroup.js
 */var Reverb=function(audiolet,mix,roomSize,damping){AudioletNode.call(this,audiolet,4,1);this.initialMix=0.33;this.fixedGain=0.015;this.initialDamping=0.5;this.scaleDamping=0.4;this.initialRoomSize=0.5;this.scaleRoom=0.28;this.offsetRoom=0.7;this.combTuning=[1116,1188,1277,1356,1422,1491,1557,1617];this.allPassTuning=[556,441,341,225];var mix=mix||this.initialMix;this.mix=new AudioletParameter(this,1,mix);var roomSize=roomSize||this.initialRoomSize;this.roomSize=new AudioletParameter(this,2,roomSize);var damping=damping||this.initialDamping;this.damping=new AudioletParameter(this,3,damping);this.combBuffers=[];this.combIndices=[];this.filterStores=[];var numberOfCombs=this.combTuning.length;for(var i=0;i<numberOfCombs;i++){this.combBuffers.push(new Float32Array(this.combTuning[i]));this.combIndices.push(0);this.filterStores.push(0);}
this.allPassBuffers=[];this.allPassIndices=[];var numberOfFilters=this.allPassTuning.length;for(var i=0;i<numberOfFilters;i++){this.allPassBuffers.push(new Float32Array(this.allPassTuning[i]));this.allPassIndices.push(0);}};extend(Reverb,AudioletNode);Reverb.prototype.generate=function(){var mix=this.mix.getValue();var roomSize=this.roomSize.getValue();var damping=this.damping.getValue();var numberOfCombs=this.combTuning.length;var numberOfFilters=this.allPassTuning.length;var value=this.inputs[0].samples[0]||0;var dryValue=value;value*=this.fixedGain;var gainedValue=value;var damping=damping*this.scaleDamping;var feedback=roomSize*this.scaleRoom+this.offsetRoom;for(var i=0;i<numberOfCombs;i++){var combIndex=this.combIndices[i];var combBuffer=this.combBuffers[i];var filterStore=this.filterStores[i];var output=combBuffer[combIndex];filterStore=(output*(1-damping))+
(filterStore*damping);value+=output;combBuffer[combIndex]=gainedValue+feedback*filterStore;combIndex+=1;if(combIndex>=combBuffer.length){combIndex=0;}
this.combIndices[i]=combIndex;this.filterStores[i]=filterStore;}
for(var i=0;i<numberOfFilters;i++){var allPassBuffer=this.allPassBuffers[i];var allPassIndex=this.allPassIndices[i];var input=value;var bufferValue=allPassBuffer[allPassIndex];value=-value+bufferValue;allPassBuffer[allPassIndex]=input+(bufferValue*0.5);allPassIndex+=1;if(allPassIndex>=allPassBuffer.length){allPassIndex=0;}
this.allPassIndices[i]=allPassIndex;}
this.outputs[0].samples[0]=mix*value+(1-mix)*dryValue;};Reverb.prototype.toString=function(){return'Reverb';};/*!
  @depends ../core/AudioletNode.js
 */var Saw=function(audiolet,frequency){AudioletNode.call(this,audiolet,1,1);this.frequency=new AudioletParameter(this,0,frequency||440);this.phase=0;};extend(Saw,AudioletNode);Saw.prototype.generate=function(){var output=this.outputs[0];var frequency=this.frequency.getValue();var sampleRate=this.audiolet.device.sampleRate;output.samples[0]=((this.phase/2+0.25)%0.5-0.25)*4;this.phase+=frequency/sampleRate;if(this.phase>1){this.phase%=1;}};Saw.prototype.toString=function(){return'Saw';};/*!
  @depends ../core/AudioletNode.js
 */var SoftClip=function(audiolet){AudioletNode.call(this,audiolet,1,1);this.linkNumberOfOutputChannels(0,0);};extend(SoftClip,AudioletNode);SoftClip.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){var value=input.samples[i];if(value>0.5||value<-0.5){output.samples[i]=(Math.abs(value)-0.25)/value;}
else{output.samples[i]=value;}}};SoftClip.prototype.toString=function(){return('SoftClip');};/*!
  @depends ../core/AudioletNode.js
 */var Square=function(audiolet,frequency){AudioletNode.call(this,audiolet,1,1);this.frequency=new AudioletParameter(this,0,frequency||440);this.phase=0;};extend(Square,AudioletNode);Square.prototype.generate=function(){var output=this.outputs[0];var frequency=this.frequency.getValue();var sampleRate=this.audiolet.device.sampleRate;output.samples[0]=this.phase>0.5?1:-1;this.phase+=frequency/sampleRate;if(this.phase>1){this.phase%=1;}};Square.prototype.toString=function(){return'Square';};/*!
  @depends ../core/AudioletNode.js
 */var Triangle=function(audiolet,frequency){AudioletNode.call(this,audiolet,1,1);this.frequency=new AudioletParameter(this,0,frequency||440);this.phase=0;};extend(Triangle,AudioletNode);Triangle.prototype.generate=function(){var output=this.outputs[0];var frequency=this.frequency.getValue();var sampleRate=this.audiolet.device.sampleRate;output.samples[0]=1-4*Math.abs((this.phase+0.25)%1-0.5);this.phase+=frequency/sampleRate;if(this.phase>1){this.phase%=1;}};Triangle.prototype.toString=function(){return'Triangle';};/*!
  @depends ../core/AudioletNode.js
 */var TriggerControl=function(audiolet,trigger){AudioletNode.call(this,audiolet,0,1);this.trigger=new AudioletParameter(this,null,trigger||0);};extend(TriggerControl,AudioletNode);TriggerControl.prototype.generate=function(){if(this.trigger.getValue()>0){this.outputs[0].samples[0]=1;this.trigger.setValue(0);}
else{this.outputs[0].samples[0]=0;}};TriggerControl.prototype.toString=function(){return'Trigger Control';};/*!
  @depends ../core/AudioletNode.js
 */var UpMixer=function(audiolet,outputChannels){AudioletNode.call(this,audiolet,1,1);this.outputs[0].numberOfChannels=outputChannels;};extend(UpMixer,AudioletNode);UpMixer.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var numberOfInputChannels=input.samples.length;var numberOfOutputChannels=output.samples.length;if(numberOfInputChannels==numberOfOutputChannels){output.samples=input.samples;}
else{for(var i=0;i<numberOfOutputChannels;i++){output.samples[i]=input.samples[i%numberOfInputChannels];}}};UpMixer.prototype.toString=function(){return'UpMixer';};var WebKitBufferPlayer=function(audiolet,onComplete){AudioletNode.call(this,audiolet,0,1);this.onComplete=onComplete;this.isWebKit=this.audiolet.device.sink instanceof Sink.sinks.webkit;this.ready=false;this.setNumberOfOutputChannels(0,0);if(!this.isWebKit){return;}
this.context=this.audiolet.device.sink._context;this.jsNode=null;this.source=null;this.ready=false;this.loaded=false;this.buffers=[];this.readPosition=0;this.endTime=null;};extend(WebKitBufferPlayer,AudioletNode);WebKitBufferPlayer.prototype.load=function(url,onLoad,onError){if(!this.isWebKit){return;}
this.stop();this.xhr=new XMLHttpRequest();this.xhr.open("GET",url,true);this.xhr.responseType="arraybuffer";this.xhr.onload=this.onLoad.bind(this,onLoad,onError);this.xhr.onerror=onError;this.xhr.send();};WebKitBufferPlayer.prototype.stop=function(){this.ready=false;this.loaded=false;this.buffers=[];this.readPosition=0;this.endTime=null;this.setNumberOfOutputChannels(0);this.disconnectWebKitNodes();};WebKitBufferPlayer.prototype.disconnectWebKitNodes=function(){if(this.source&&this.jsNode){this.source.disconnect(this.jsNode);this.jsNode.disconnect(this.context.destination);this.source=null;this.jsNode=null;}};WebKitBufferPlayer.prototype.onLoad=function(onLoad,onError){this.context.decodeAudioData(this.xhr.response,function(buffer){this.onDecode(buffer);onLoad();}.bind(this),onError);};WebKitBufferPlayer.prototype.onDecode=function(buffer){this.fileBuffer=buffer;this.source=this.context.createBufferSource();this.source.buffer=this.fileBuffer;var numberOfChannels=this.fileBuffer.numberOfChannels;this.setNumberOfOutputChannels(0,numberOfChannels);this.jsNode=this.context.createJavaScriptNode(4096,numberOfChannels,0);this.jsNode.onaudioprocess=this.onData.bind(this);this.source.connect(this.jsNode);this.jsNode.connect(this.context.destination);this.source.noteOn(0);this.endTime=this.context.currentTime+this.fileBuffer.duration;this.loaded=true;};WebKitBufferPlayer.prototype.onData=function(event){if(this.loaded){this.ready=true;}
var numberOfChannels=event.inputBuffer.numberOfChannels;for(var i=0;i<numberOfChannels;i++){this.buffers[i]=event.inputBuffer.getChannelData(i);this.readPosition=0;}};WebKitBufferPlayer.prototype.generate=function(){if(!this.ready){return;}
var output=this.outputs[0];var numberOfChannels=output.samples.length;for(var i=0;i<numberOfChannels;i++){output.samples[i]=this.buffers[i][this.readPosition];}
this.readPosition+=1;if(this.context.currentTime>this.endTime){this.stop();this.onComplete();}};/*!
  @depends ../core/AudioletNode.js
 */var WhiteNoise=function(audiolet){AudioletNode.call(this,audiolet,0,1);};extend(WhiteNoise,AudioletNode);WhiteNoise.prototype.generate=function(){this.outputs[0].samples[0]=Math.random()*2-1;};WhiteNoise.prototype.toString=function(){return'White Noise';};/*!
  @depends ../core/AudioletNode.js
 */var Add=function(audiolet,value){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.value=new AudioletParameter(this,1,value||0);};extend(Add,AudioletNode);Add.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var value=this.value.getValue();var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){output.samples[i]=input.samples[i]+value;}};Add.prototype.toString=function(){return'Add';};/*!
  @depends ../core/AudioletNode.js
 */var Divide=function(audiolet,value){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.value=new AudioletParameter(this,1,value||1);};extend(Divide,AudioletNode);Divide.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var value=this.value.getValue();var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){output.samples[i]=input.samples[i]/value;}};Divide.prototype.toString=function(){return'Divide';};/*!
  @depends ../core/AudioletNode.js
 */var Modulo=function(audiolet,value){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.value=new AudioletParameter(this,1,value||1);};extend(Modulo,AudioletNode);Modulo.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var value=this.value.getValue();var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){output.samples[i]=input.samples[i]%value;}};Modulo.prototype.toString=function(){return'Modulo';};/*!
  @depends ../core/AudioletNode.js
 */var MulAdd=function(audiolet,mul,add){AudioletNode.call(this,audiolet,3,1);this.linkNumberOfOutputChannels(0,0);this.mul=new AudioletParameter(this,1,mul||1);this.add=new AudioletParameter(this,2,add||0);};extend(MulAdd,AudioletNode);MulAdd.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var mul=this.mul.getValue();var add=this.add.getValue();var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){output.samples[i]=input.samples[i]*mul+add;}};MulAdd.prototype.toString=function(){return'Multiplier/Adder';};/*!
  @depends ../core/AudioletNode.js
 */var Reciprocal=function(audiolet){AudioletNode.call(this,audiolet,1,1);this.linkNumberOfOutputChannels(0,0);};extend(Reciprocal,AudioletNode);Reciprocal.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){output.samples[i]=1/input.samples[i];}};Reciprocal.prototype.toString=function(){return'Reciprocal';};/*!
  @depends ../core/AudioletNode.js
 */var Subtract=function(audiolet,value){AudioletNode.call(this,audiolet,2,1);this.linkNumberOfOutputChannels(0,0);this.value=new AudioletParameter(this,1,value||0);};extend(Subtract,AudioletNode);Subtract.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var value=this.value.getValue();var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){output.samples[i]=input.samples[i]-value;}};Subtract.prototype.toString=function(){return'Subtract';};var Tanh=function(audiolet){AudioletNode.call(this,audiolet,1,1);this.linkNumberOfOutputChannels(0,0);};extend(Tanh,AudioletNode);Tanh.prototype.generate=function(){var input=this.inputs[0];var output=this.outputs[0];var numberOfChannels=input.samples.length;for(var i=0;i<numberOfChannels;i++){var value=input.samples[i];output.samples[i]=(Math.exp(value)-Math.exp(-value))/(Math.exp(value)+Math.exp(-value));}};Tanh.prototype.toString=function(){return('Tanh');};var Pattern=function(){};Pattern.prototype.next=function(){return null;};Pattern.prototype.valueOf=function(item){if(item instanceof Pattern){return(item.next());}
else{return(item);}};Pattern.prototype.reset=function(){};/*!
  @depends Pattern.js
 */var PArithmetic=function(start,step,repeats){Pattern.call(this);this.start=start;this.value=start;this.step=step;this.repeats=repeats;this.position=0;};extend(PArithmetic,Pattern);PArithmetic.prototype.next=function(){var returnValue;if(this.position==0){returnValue=this.value;this.position+=1;}
else if(this.position<this.repeats){var step=this.valueOf(this.step);if(step!=null){this.value+=step;returnValue=this.value;this.position+=1;}
else{returnValue=null;}}
else{returnValue=null;}
return(returnValue);};PArithmetic.prototype.reset=function(){this.value=this.start;this.position=0;if(this.step instanceof Pattern){this.step.reset();}};var Pseries=PArithmetic;/*!
  @depends Pattern.js
 */var PChoose=function(list,repeats){Pattern.call(this);this.list=list;this.repeats=repeats||1;this.position=0;};extend(PChoose,Pattern);PChoose.prototype.next=function(){var returnValue;if(this.position<this.repeats){var index=Math.floor(Math.random()*this.list.length);var item=this.list[index];var value=this.valueOf(item);if(value!=null){if(!(item instanceof Pattern)){this.position+=1;}
returnValue=value;}
else{if(item instanceof Pattern){item.reset();}
this.position+=1;returnValue=this.next();}}
else{returnValue=null;}
return(returnValue);};PChoose.prototype.reset=function(){this.position=0;for(var i=0;i<this.list.length;i++){var item=this.list[i];if(item instanceof Pattern){item.reset();}}};var Prand=PChoose;/*!
  @depends Pattern.js
 */var PGeometric=function(start,step,repeats){Pattern.call(this);this.start=start;this.value=start;this.step=step;this.repeats=repeats;this.position=0;};extend(PGeometric,Pattern);PGeometric.prototype.next=function(){var returnValue;if(this.position==0){returnValue=this.value;this.position+=1;}
else if(this.position<this.repeats){var step=this.valueOf(this.step);if(step!=null){this.value*=step;returnValue=this.value;this.position+=1;}
else{returnValue=null;}}
else{returnValue=null;}
return(returnValue);};PGeometric.prototype.reset=function(){this.value=this.start;this.position=0;if(this.step instanceof Pattern){this.step.reset();}};var Pgeom=PGeometric;/*!
  @depends Pattern.js
 */var PProxy=function(pattern){Pattern.call(this);if(pattern){this.pattern=pattern;}};extend(PProxy,Pattern);PProxy.prototype.next=function(){var returnValue;if(this.pattern){var returnValue=this.pattern.next();}
else{returnValue=null;}
return returnValue;};var Pp=PProxy;/*!
  @depends Pattern.js
 */var PRandom=function(low,high,repeats){Pattern.call(this);this.low=low;this.high=high;this.repeats=repeats;this.position=0;};extend(PRandom,Pattern);PRandom.prototype.next=function(){var returnValue;if(this.position<this.repeats){var low=this.valueOf(this.low);var high=this.valueOf(this.high);if(low!=null&&high!=null){returnValue=low+Math.random()*(high-low);this.position+=1;}
else{returnValue=null;}}
else{returnValue=null;}
return(returnValue);};PRandom.prototype.reset=function(){this.position=0;};var Pwhite=PRandom;/*!
  @depends Pattern.js
 */var PSequence=function(list,repeats,offset){Pattern.call(this);this.list=list;this.repeats=repeats||1;this.position=0;this.offset=offset||0;};extend(PSequence,Pattern);PSequence.prototype.next=function(){var returnValue;if(this.position<this.repeats*this.list.length){var index=(this.position+this.offset)%this.list.length;var item=this.list[index];var value=this.valueOf(item);if(value!=null){if(!(item instanceof Pattern)){this.position+=1;}
returnValue=value;}
else{if(item instanceof Pattern){item.reset();}
this.position+=1;returnValue=this.next();}}
else{returnValue=null;}
return(returnValue);};PSequence.prototype.reset=function(){this.position=0;for(var i=0;i<this.list.length;i++){var item=this.list[i];if(item instanceof Pattern){item.reset();}}};var Pseq=PSequence;/*!
  @depends Pattern.js
 */var PSeries=function(list,repeats,offset){Pattern.call(this);this.list=list;this.repeats=repeats||1;this.position=0;this.offset=offset||0;};extend(PSeries,Pattern);PSeries.prototype.next=function(){var returnValue;if(this.position<this.repeats){var index=(this.position+this.offset)%this.list.length;var item=this.list[index];var value=this.valueOf(item);if(value!=null){if(!(item instanceof Pattern)){this.position+=1;}
returnValue=value;}
else{if(item instanceof Pattern){item.reset();}
this.position+=1;returnValue=this.next();}}
else{returnValue=null;}
return(returnValue);};PSeries.prototype.reset=function(){this.position=0;for(var i=0;i<this.list.length;i++){var item=this.list[i];if(item instanceof Pattern){item.reset();}}};var Pser=PSeries;/*!
  @depends Pattern.js
 */var PShuffle=function(list,repeats){Pattern.call(this);this.list=[];while(list.length){var index=Math.floor(Math.random()*list.length);var value=list.splice(index,1);this.list.push(value);}
this.repeats=repeats;this.position=0;};extend(PShuffle,Pattern);PShuffle.prototype.next=function(){var returnValue;if(this.position<this.repeats*this.list.length){var index=(this.position+this.offset)%this.list.length;var item=this.list[index];var value=this.valueOf(item);if(value!=null){if(!(item instanceof Pattern)){this.position+=1;}
returnValue=value;}
else{if(item instanceof Pattern){item.reset();}
this.position+=1;returnValue=this.next();}}
else{returnValue=null;}
return(returnValue);};var Pshuffle=PShuffle;var Scale=function(degrees,tuning){this.degrees=degrees;this.tuning=tuning||new EqualTemperamentTuning(12);};Scale.prototype.getFrequency=function(degree,rootFrequency,octave){var frequency=rootFrequency;octave+=Math.floor(degree/this.degrees.length);degree%=this.degrees.length;frequency*=Math.pow(this.tuning.octaveRatio,octave);frequency*=this.tuning.ratios[this.degrees[degree]];return frequency;};/*!
  @depends Scale.js
 */var MajorScale=function(){Scale.call(this,[0,2,4,5,7,9,11]);};extend(MajorScale,Scale);/*!
  @depends Scale.js
 */var MinorScale=function(){Scale.call(this,[0,2,3,5,7,8,10]);};extend(MinorScale,Scale);var Tuning=function(semitones,octaveRatio){this.semitones=semitones;this.octaveRatio=octaveRatio||2;this.ratios=[];var tuningLength=this.semitones.length;for(var i=0;i<tuningLength;i++){this.ratios.push(Math.pow(2,this.semitones[i]/tuningLength));}};/*!
  @depends Tuning.js
 */var EqualTemperamentTuning=function(pitchesPerOctave){var semitones=[];for(var i=0;i<pitchesPerOctave;i++){semitones.push(i);}
Tuning.call(this,semitones,2);};extend(EqualTemperamentTuning,Tuning);var Sink=this.Sink=function(global){function Sink(readFn,channelCount,bufferSize,sampleRate){var sinks=Sink.sinks.list,i;for(i=0;i<sinks.length;i++){if(sinks[i].enabled){try{return new sinks[i](readFn,channelCount,bufferSize,sampleRate);}catch(e1){}}}
throw Sink.Error(0x02);}
function SinkClass(){}
Sink.SinkClass=SinkClass;SinkClass.prototype=Sink.prototype={sampleRate:44100,channelCount:2,bufferSize:4096,writePosition:0,previousHit:0,ringOffset:0,channelMode:'interleaved',isReady:false,start:function(readFn,channelCount,bufferSize,sampleRate){this.channelCount=isNaN(channelCount)||channelCount===null?this.channelCount:channelCount;this.bufferSize=isNaN(bufferSize)||bufferSize===null?this.bufferSize:bufferSize;this.sampleRate=isNaN(sampleRate)||sampleRate===null?this.sampleRate:sampleRate;this.readFn=readFn;this.activeRecordings=[];this.previousHit=+new Date();Sink.EventEmitter.call(this);Sink.emit('init',[this].concat([].slice.call(arguments)));},process:function(soundData,channelCount){this.emit('preprocess',arguments);if(this.ringBuffer){(this.channelMode==='interleaved'?this.ringSpin:this.ringSpinInterleaved).apply(this,arguments);}
if(this.channelMode==='interleaved'){this.emit('audioprocess',arguments);if(this.readFn){this.readFn.apply(this,arguments);}}else{var soundDataSplit=Sink.deinterleave(soundData,this.channelCount),args=[soundDataSplit].concat([].slice.call(arguments,1));this.emit('audioprocess',args);if(this.readFn){this.readFn.apply(this,args);}
Sink.interleave(soundDataSplit,this.channelCount,soundData);}
this.emit('postprocess',arguments);this.previousHit=+new Date();this.writePosition+=soundData.length/channelCount;},getPlaybackTime:function(){return this.writePosition-this.bufferSize;},ready:function(){if(this.isReady)return;this.isReady=true;this.emit('ready',[]);}};function sinks(type,constructor,prototype,disabled,priority){prototype=prototype||constructor.prototype;constructor.prototype=new Sink.SinkClass();constructor.prototype.type=type;constructor.enabled=!disabled;var k;for(k in prototype){if(prototype.hasOwnProperty(k)){constructor.prototype[k]=prototype[k];}}
sinks[type]=constructor;sinks.list[priority?'unshift':'push'](constructor);}
Sink.sinks=Sink.devices=sinks;Sink.sinks.list=[];Sink.singleton=function(){var sink=Sink.apply(null,arguments);Sink.singleton=function(){return sink;};return sink;};global.Sink=Sink;return Sink;}(function(){return this;}());void function(Sink){function EventEmitter(){var k;for(k in EventEmitter.prototype){if(EventEmitter.prototype.hasOwnProperty(k)){this[k]=EventEmitter.prototype[k];}}
this._listeners={};}
EventEmitter.prototype={_listeners:null,emit:function(name,args){if(this._listeners[name]){for(var i=0;i<this._listeners[name].length;i++){this._listeners[name][i].apply(this,args);}}
return this;},on:function(name,listener){this._listeners[name]=this._listeners[name]||[];this._listeners[name].push(listener);return this;},off:function(name,listener){if(this._listeners[name]){if(!listener){delete this._listeners[name];return this;}
for(var i=0;i<this._listeners[name].length;i++){if(this._listeners[name][i]===listener){this._listeners[name].splice(i--,1);}}
if(!this._listeners[name].length){delete this._listeners[name];}}
return this;}};Sink.EventEmitter=EventEmitter;EventEmitter.call(Sink);}(this.Sink);void function(Sink){Sink.doInterval=function(callback,timeout){var timer,kill;function create(noWorker){if(Sink.inlineWorker.working&&!noWorker){timer=Sink.inlineWorker('setInterval(function (){ postMessage("tic"); }, '+timeout+');');timer.onmessage=function(){callback();};kill=function(){timer.terminate();};}else{timer=setInterval(callback,timeout);kill=function(){clearInterval(timer);};}}
if(Sink.inlineWorker.ready){create();}else{Sink.inlineWorker.on('ready',function(){create();});}
return function(){if(!kill){if(!Sink.inlineWorker.ready){Sink.inlineWorker.on('ready',function(){if(kill)kill();});}}else{kill();}};};}(this.Sink);void function(Sink){var _Blob,_BlobBuilder,_URL,_btoa;void function(prefixes,urlPrefixes){function find(name,prefixes){var b,a=prefixes.slice();for(b=a.shift();typeof b!=='undefined';b=a.shift()){b=Function('return typeof '+b+name+'=== "undefined" ? undefined : '+
b+name)();if(b)return b;}}
_Blob=find('Blob',prefixes);_BlobBuilder=find('BlobBuilder',prefixes);_URL=find('URL',urlPrefixes);_btoa=find('btoa',['']);}(['','Moz','WebKit','MS'],['','webkit']);var createBlob=_Blob&&_URL&&function(content,type){return _URL.createObjectURL(new _Blob([content],{type:type}));};var createBlobBuilder=_BlobBuilder&&_URL&&function(content,type){var bb=new _BlobBuilder();bb.append(content);return _URL.createObjectURL(bb.getBlob(type));};var createData=_btoa&&function(content,type){return'data:'+type+';base64,'+_btoa(content);};var createDynURL=createBlob||createBlobBuilder||createData;if(!createDynURL)return;if(createBlob)createDynURL.createBlob=createBlob;if(createBlobBuilder)createDynURL.createBlobBuilder=createBlobBuilder;if(createData)createDynURL.createData=createData;if(_Blob)createDynURL.Blob=_Blob;if(_BlobBuilder)createDynURL.BlobBuilder=_BlobBuilder;if(_URL)createDynURL.URL=_URL;Sink.createDynURL=createDynURL;Sink.revokeDynURL=function(url){if(typeof url==='string'&&url.indexOf('data:')===0){return false;}else{return _URL.revokeObjectURL(url);}};}(this.Sink);void function(Sink){function SinkError(code){if(!SinkError.hasOwnProperty(code))throw SinkError(1);if(!(this instanceof SinkError))return new SinkError(code);var k;for(k in SinkError[code]){if(SinkError[code].hasOwnProperty(k)){this[k]=SinkError[code][k];}}
this.code=code;}
SinkError.prototype=new Error();SinkError.prototype.toString=function(){return'SinkError 0x'+this.code.toString(16)+': '+this.message;};SinkError[0x01]={message:'No such error code.',explanation:'The error code does not exist.'};SinkError[0x02]={message:'No audio sink available.',explanation:'The audio device may be busy, or no supported output API is available for this browser.'};SinkError[0x10]={message:'Buffer underflow.',explanation:'Trying to recover...'};SinkError[0x11]={message:'Critical recovery fail.',explanation:'The buffer underflow has reached a critical point, trying to recover, but will probably fail anyway.'};SinkError[0x12]={message:'Buffer size too large.',explanation:'Unable to allocate the buffer due to excessive length, please try a smaller buffer. Buffer size should probably be smaller than the sample rate.'};Sink.Error=SinkError;}(this.Sink);void function(Sink){var define=Object.defineProperty?function(obj,name,value){Object.defineProperty(obj,name,{value:value,configurable:true,writable:true});}:function(obj,name,value){obj[name]=value;};function terminate(){define(this,'terminate',this._terminate);Sink.revokeDynURL(this._url);delete this._url;delete this._terminate;return this.terminate();}
function inlineWorker(script){function wrap(type,content,typeName){try{var url=type(content,'text/javascript');var worker=new Worker(url);define(worker,'_url',url);define(worker,'_terminate',worker.terminate);define(worker,'terminate',terminate);if(inlineWorker.type)return worker;inlineWorker.type=typeName;inlineWorker.createURL=type;return worker;}catch(e){return null;}}
var createDynURL=Sink.createDynURL;var worker;if(inlineWorker.createURL){return wrap(inlineWorker.createURL,script,inlineWorker.type);}
worker=wrap(createDynURL.createBlob,script,'blob');if(worker)return worker;worker=wrap(createDynURL.createBlobBuilder,script,'blobbuilder');if(worker)return worker;worker=wrap(createDynURL.createData,script,'data');return worker;}
Sink.EventEmitter.call(inlineWorker);inlineWorker.test=function(){inlineWorker.ready=inlineWorker.working=false;inlineWorker.type='';inlineWorker.createURL=null;var worker=inlineWorker('this.onmessage=function(e){postMessage(e.data)}');var data='inlineWorker';function ready(success){if(inlineWorker.ready)return;inlineWorker.ready=true;inlineWorker.working=success;inlineWorker.emit('ready',[success]);inlineWorker.off('ready');if(success&&worker){worker.terminate();}
worker=null;}
if(!worker){setTimeout(function(){ready(false);},0);}else{worker.onmessage=function(e){ready(e.data===data);};worker.postMessage(data);setTimeout(function(){ready(false);},1000);}};Sink.inlineWorker=inlineWorker;inlineWorker.test();}(this.Sink);void function(Sink){Sink.sinks('audiodata',function(){var self=this,currentWritePosition=0,tail=null,audioDevice=new Audio(),written,currentPosition,available,soundData,prevPos,timer;self.start.apply(self,arguments);self.preBufferSize=isNaN(arguments[4])||arguments[4]===null?this.preBufferSize:arguments[4];function bufferFill(){if(tail){written=audioDevice.mozWriteAudio(tail);currentWritePosition+=written;if(written<tail.length){tail=tail.subarray(written);return tail;}
tail=null;}
currentPosition=audioDevice.mozCurrentSampleOffset();available=Number(currentPosition+(prevPos!==currentPosition?self.bufferSize:self.preBufferSize)*self.channelCount-currentWritePosition);if(currentPosition===prevPos){self.emit('error',[Sink.Error(0x10)]);}
if(available>0||prevPos===currentPosition){self.ready();try{soundData=new Float32Array(prevPos===currentPosition?self.preBufferSize*self.channelCount:self.forceBufferSize?available<self.bufferSize*2?self.bufferSize*2:available:available);}catch(e){self.emit('error',[Sink.Error(0x12)]);self.kill();return;}
self.process(soundData,self.channelCount);written=self._audio.mozWriteAudio(soundData);if(written<soundData.length){tail=soundData.subarray(written);}
currentWritePosition+=written;}
prevPos=currentPosition;}
audioDevice.mozSetup(self.channelCount,self.sampleRate);this._timers=[];this._timers.push(Sink.doInterval(function(){if(+new Date()-self.previousHit>2000){self._audio=audioDevice=new Audio();audioDevice.mozSetup(self.channelCount,self.sampleRate);currentWritePosition=0;self.emit('error',[Sink.Error(0x11)]);}},1000));this._timers.push(Sink.doInterval(bufferFill,self.interval));self._bufferFill=bufferFill;self._audio=audioDevice;},{bufferSize:24576,preBufferSize:24576,forceBufferSize:false,interval:100,kill:function(){while(this._timers.length){this._timers.shift()();}
this.emit('kill');},getPlaybackTime:function(){return this._audio.mozCurrentSampleOffset()/this.channelCount;}},false,true);Sink.sinks.moz=Sink.sinks.audiodata;}(this.Sink);void function(Sink){Sink.sinks('dummy',function(){var self=this;self.start.apply(self,arguments);function bufferFill(){var soundData=new Float32Array(self.bufferSize*self.channelCount);self.process(soundData,self.channelCount);}
self._kill=Sink.doInterval(bufferFill,self.bufferSize/self.sampleRate*1000);self._callback=bufferFill;},{kill:function(){this._kill();this.emit('kill');}},true);}(this.Sink);(function(Sink,sinks){sinks=Sink.sinks;function newAudio(src){var audio=document.createElement('audio');if(src){audio.src=src;}
return audio;}
sinks('wav',function(){var self=this,audio=new sinks.wav.wavAudio(),PCMData=typeof PCMData==='undefined'?audioLib.PCMData:PCMData;self.start.apply(self,arguments);var soundData=new Float32Array(self.bufferSize*self.channelCount),zeroData=new Float32Array(self.bufferSize*self.channelCount);if(!newAudio().canPlayType('audio/wav; codecs=1')||!btoa)throw 0;function bufferFill(){if(self._audio.hasNextFrame)return;self.ready();Sink.memcpy(zeroData,0,soundData,0);self.process(soundData,self.channelCount);self._audio.setSource('data:audio/wav;base64,'+btoa(audioLib.PCMData.encode({data:soundData,sampleRate:self.sampleRate,channelCount:self.channelCount,bytesPerSample:self.quality})));if(!self._audio.currentFrame.src)self._audio.nextClip();}
self.kill=Sink.doInterval(bufferFill,40);self._bufferFill=bufferFill;self._audio=audio;},{quality:1,bufferSize:22050,getPlaybackTime:function(){var audio=this._audio;return(audio.currentFrame?audio.currentFrame.currentTime*this.sampleRate:0)+audio.samples;}});function wavAudio(){var self=this;self.currentFrame=newAudio();self.nextFrame=newAudio();self._onended=function(){self.samples+=self.bufferSize;self.nextClip();};}
wavAudio.prototype={samples:0,nextFrame:null,currentFrame:null,_onended:null,hasNextFrame:false,nextClip:function(){var curFrame=this.currentFrame;this.currentFrame=this.nextFrame;this.nextFrame=curFrame;this.hasNextFrame=false;this.currentFrame.play();},setSource:function(src){this.nextFrame.src=src;this.nextFrame.addEventListener('ended',this._onended,true);this.hasNextFrame=true;}};sinks.wav.wavAudio=wavAudio;}(this.Sink));(function(sinks,fixChrome82795){var AudioContext=typeof window==='undefined'?null:window.webkitAudioContext||window.AudioContext;sinks('webaudio',function(readFn,channelCount,bufferSize,sampleRate){var self=this,context=sinks.webaudio.getContext(),node=null,soundData=null,zeroBuffer=null;self.start.apply(self,arguments);node=context.createJavaScriptNode(self.bufferSize,0,self.channelCount);function bufferFill(e){var outputBuffer=e.outputBuffer,channelCount=outputBuffer.numberOfChannels,i,n,l=outputBuffer.length,size=outputBuffer.size,channels=new Array(channelCount),tail;self.ready();soundData=soundData&&soundData.length===l*channelCount?soundData:new Float32Array(l*channelCount);zeroBuffer=zeroBuffer&&zeroBuffer.length===soundData.length?zeroBuffer:new Float32Array(l*channelCount);soundData.set(zeroBuffer);for(i=0;i<channelCount;i++){channels[i]=outputBuffer.getChannelData(i);}
self.process(soundData,self.channelCount);for(i=0;i<l;i++){for(n=0;n<channelCount;n++){channels[n][i]=soundData[i*self.channelCount+n];}}}
self.sampleRate=context.sampleRate;node.onaudioprocess=bufferFill;node.connect(context.destination);self._context=context;self._node=node;self._callback=bufferFill;fixChrome82795.push(node);},{kill:function(){this._node.disconnect(0);for(var i=0;i<fixChrome82795.length;i++){if(fixChrome82795[i]===this._node){fixChrome82795.splice(i--,1);}}
this._node=this._context=null;this.emit('kill');},getPlaybackTime:function(){return this._context.currentTime*this.sampleRate;}},false,true);sinks.webkit=sinks.webaudio;sinks.webaudio.fix82795=fixChrome82795;sinks.webaudio.getContext=function(){var context=new AudioContext();sinks.webaudio.getContext=function(){return context;};return context;};}(this.Sink.sinks,[]));(function(Sink){Sink.sinks('worker',function(){var self=this,global=(function(){return this;}()),soundData=null,outBuffer=null,zeroBuffer=null;self.start.apply(self,arguments);importScripts();function mspBufferFill(e){if(!self.isReady){self.initMSP(e);}
self.ready();var channelCount=self.channelCount,l=e.audioLength,n,i;soundData=soundData&&soundData.length===l*channelCount?soundData:new Float32Array(l*channelCount);outBuffer=outBuffer&&outBuffer.length===soundData.length?outBuffer:new Float32Array(l*channelCount);zeroBuffer=zeroBuffer&&zeroBuffer.length===soundData.length?zeroBuffer:new Float32Array(l*channelCount);soundData.set(zeroBuffer);outBuffer.set(zeroBuffer);self.process(soundData,self.channelCount);for(n=0;n<channelCount;n++){for(i=0;i<l;i++){outBuffer[n*e.audioLength+i]=soundData[n+i*channelCount];}}
e.writeAudio(outBuffer);}
function waBufferFill(e){if(!self.isReady){self.initWA(e);}
self.ready();var outputBuffer=e.outputBuffer,channelCount=outputBuffer.numberOfChannels,i,n,l=outputBuffer.length,size=outputBuffer.size,channels=new Array(channelCount),tail;soundData=soundData&&soundData.length===l*channelCount?soundData:new Float32Array(l*channelCount);zeroBuffer=zeroBuffer&&zeroBuffer.length===soundData.length?zeroBuffer:new Float32Array(l*channelCount);soundData.set(zeroBuffer);for(i=0;i<channelCount;i++){channels[i]=outputBuffer.getChannelData(i);}
self.process(soundData,self.channelCount);for(i=0;i<l;i++){for(n=0;n<channelCount;n++){channels[n][i]=soundData[i*self.channelCount+n];}}}
global.onprocessmedia=mspBufferFill;global.onaudioprocess=waBufferFill;self._mspBufferFill=mspBufferFill;self._waBufferFill=waBufferFill;},{ready:false,initMSP:function(e){this.channelCount=e.audioChannels;this.sampleRate=e.audioSampleRate;this.bufferSize=e.audioLength*this.channelCount;this.ready=true;this.emit('ready',[]);},initWA:function(e){var b=e.outputBuffer;this.channelCount=b.numberOfChannels;this.sampleRate=b.sampleRate;this.bufferSize=b.length*this.channelCount;this.ready=true;this.emit('ready',[]);}});}(this.Sink));(function(Sink){Sink.deinterleave=function(buffer,channelCount){var l=buffer.length,size=l/channelCount,ret=[],i,n;for(i=0;i<channelCount;i++){ret[i]=new Float32Array(size);for(n=0;n<size;n++){ret[i][n]=buffer[n*channelCount+i];}}
return ret;};Sink.interleave=function(buffers,channelCount,buffer){channelCount=channelCount||buffers.length;var l=buffers[0].length,bufferCount=buffers.length,i,n;buffer=buffer||new Float32Array(l*channelCount);for(i=0;i<bufferCount;i++){for(n=0;n<l;n++){buffer[i+n*channelCount]=buffers[i][n];}}
return buffer;};Sink.mix=function(buffer){var buffers=[].slice.call(arguments,1),l,i,c;for(c=0;c<buffers.length;c++){l=Math.max(buffer.length,buffers[c].length);for(i=0;i<l;i++){buffer[i]+=buffers[c][i];}}
return buffer;};Sink.resetBuffer=function(buffer){var l=buffer.length,i;for(i=0;i<l;i++){buffer[i]=0;}
return buffer;};Sink.clone=function(buffer,result){var l=buffer.length,i;result=result||new Float32Array(l);for(i=0;i<l;i++){result[i]=buffer[i];}
return result;};Sink.createDeinterleaved=function(length,channelCount){var result=new Array(channelCount),i;for(i=0;i<channelCount;i++){result[i]=new Float32Array(length);}
return result;};Sink.memcpy=function(src,srcOffset,dst,dstOffset,length){src=src.subarray||src.slice?src:src.buffer;dst=dst.subarray||dst.slice?dst:dst.buffer;src=srcOffset?src.subarray?src.subarray(srcOffset,length&&srcOffset+length):src.slice(srcOffset,length&&srcOffset+length):src;if(dst.set){dst.set(src,dstOffset);}else{for(var i=0;i<src.length;i++){dst[i+dstOffset]=src[i];}}
return dst;};Sink.memslice=function(buffer,offset,length){return buffer.subarray?buffer.subarray(offset,length):buffer.slice(offset,length);};Sink.mempad=function(buffer,out,offset){out=out.length?out:new(buffer.constructor)(out);Sink.memcpy(buffer,0,out,offset);return out;};Sink.linspace=function(start,end,out){var l,i,n,step;out=out.length?(l=out.length)&&out:Array(l=out);step=(end-start)/--l;for(n=start+step,i=1;i<l;i++,n+=step){out[i]=n;}
out[0]=start;out[l]=end;return out;};Sink.ftoi=function(input,bitCount,output){var i,mask=Math.pow(2,bitCount-1);output=output||new(input.constructor)(input.length);for(i=0;i<input.length;i++){output[i]=~~(mask*input[i]);}
return output;};}(this.Sink));(function(Sink){function Proxy(bufferSize,channelCount){Sink.EventEmitter.call(this);this.bufferSize=isNaN(bufferSize)||bufferSize===null?this.bufferSize:bufferSize;this.channelCount=isNaN(channelCount)||channelCount===null?this.channelCount:channelCount;var self=this;this.callback=function(){return self.process.apply(self,arguments);};this.resetBuffer();}
Proxy.prototype={buffer:null,zeroBuffer:null,parentSink:null,bufferSize:4096,channelCount:2,offset:null,resetBuffer:function(){this.buffer=new Float32Array(this.bufferSize);this.zeroBuffer=new Float32Array(this.bufferSize);},process:function(buffer,channelCount){if(this.offset===null){this.loadBuffer();}
for(var i=0;i<buffer.length;i++){if(this.offset>=this.buffer.length){this.loadBuffer();}
buffer[i]=this.buffer[this.offset++];}},loadBuffer:function(){this.offset=0;Sink.memcpy(this.zeroBuffer,0,this.buffer,0);this.emit('audioprocess',[this.buffer,this.channelCount]);}};Sink.Proxy=Proxy;Sink.prototype.createProxy=function(bufferSize){var proxy=new Sink.Proxy(bufferSize,this.channelCount);proxy.parentSink=this;this.on('audioprocess',proxy.callback);return proxy;};}(this.Sink));(function(Sink){(function(){function interpolation(name,method){if(name&&method){interpolation[name]=method;}else if(name&&interpolation[name]instanceof Function){Sink.interpolate=interpolation[name];}
return interpolation[name];}
Sink.interpolation=interpolation;interpolation('linear',function(arr,pos){var first=Math.floor(pos),second=first+1,frac=pos-first;second=second<arr.length?second:0;return arr[first]*(1-frac)+arr[second]*frac;});interpolation('nearest',function(arr,pos){return pos>=arr.length-0.5?arr[0]:arr[Math.round(pos)];});interpolation('linear');}());Sink.resample=function(buffer,fromRate,fromFrequency,toRate,toFrequency){var
argc=arguments.length,speed=argc===2?fromRate:argc===3?fromRate/fromFrequency:toRate/fromRate*toFrequency/fromFrequency,l=buffer.length,length=Math.ceil(l/speed),newBuffer=new Float32Array(length),i,n;for(i=0,n=0;i<l;i+=speed){newBuffer[n++]=Sink.interpolate(buffer,i);}
return newBuffer;};}(this.Sink));void function(Sink){Sink.on('init',function(sink){sink.activeRecordings=[];sink.on('postprocess',sink.recordData);});Sink.prototype.activeRecordings=null;Sink.prototype.record=function(){var recording=new Sink.Recording(this);this.emit('record',[recording]);return recording;};Sink.prototype.recordData=function(buffer){var activeRecs=this.activeRecordings,i,l=activeRecs.length;for(i=0;i<l;i++){activeRecs[i].add(buffer);}};function Recording(bindTo){this.boundTo=bindTo;this.buffers=[];bindTo.activeRecordings.push(this);}
Recording.prototype={add:function(buffer){this.buffers.push(buffer);},clear:function(){this.buffers=[];},stop:function(){var recordings=this.boundTo.activeRecordings,i;for(i=0;i<recordings.length;i++){if(recordings[i]===this){recordings.splice(i--,1);}}},join:function(){var bufferLength=0,bufPos=0,buffers=this.buffers,newArray,n,i,l=buffers.length;for(i=0;i<l;i++){bufferLength+=buffers[i].length;}
newArray=new Float32Array(bufferLength);for(i=0;i<l;i++){for(n=0;n<buffers[i].length;n++){newArray[bufPos+n]=buffers[i][n];}
bufPos+=buffers[i].length;}
return newArray;}};Sink.Recording=Recording;}(this.Sink);void function(Sink){function processRingBuffer(){if(this.ringBuffer){(this.channelMode==='interleaved'?this.ringSpin:this.ringSpinInterleaved).apply(this,arguments);}}
Sink.on('init',function(sink){sink.on('preprocess',processRingBuffer);});Sink.prototype.ringBuffer=null;Sink.prototype.ringSpin=function(buffer){var ring=this.ringBuffer,l=buffer.length,m=ring.length,off=this.ringOffset,i;for(i=0;i<l;i++){buffer[i]+=ring[off];off=(off+1)%m;}
this.ringOffset=off;};Sink.prototype.ringSpinDeinterleaved=function(buffer){var ring=this.ringBuffer,l=buffer.length,ch=ring.length,m=ring[0].length,len=ch*m,off=this.ringOffset,i,n;for(i=0;i<l;i+=ch){for(n=0;n<ch;n++){buffer[i+n]+=ring[n][off];}
off=(off+1)%m;}
this.ringOffset=n;};}(this.Sink);void function(Sink,proto){proto=Sink.prototype;Sink.on('init',function(sink){sink.asyncBuffers=[];sink.syncBuffers=[];sink.on('preprocess',sink.writeBuffersSync);sink.on('postprocess',sink.writeBuffersAsync);});proto.writeMode='async';proto.asyncBuffers=proto.syncBuffers=null;proto.writeBuffersAsync=function(buffer){var buffers=this.asyncBuffers,l=buffer.length,buf,bufLength,i,n,offset;if(buffers){for(i=0;i<buffers.length;i++){buf=buffers[i];bufLength=buf.b.length;offset=buf.d;buf.d-=Math.min(offset,l);for(n=0;n+offset<l&&n<bufLength;n++){buffer[n+offset]+=buf.b[n];}
buf.b=buf.b.subarray(n+offset);if(i>=bufLength){buffers.splice(i--,1);}}}};proto.writeBuffersSync=function(buffer){var buffers=this.syncBuffers,l=buffer.length,i=0,soff=0;for(;i<l&&buffers.length;i++){buffer[i]+=buffers[0][soff];if(buffers[0].length<=soff){buffers.splice(0,1);soff=0;continue;}
soff++;}
if(buffers.length){buffers[0]=buffers[0].subarray(soff);}};proto.writeBufferAsync=function(buffer,delay){buffer=this.mode==='deinterleaved'?Sink.interleave(buffer,this.channelCount):buffer;var buffers=this.asyncBuffers;buffers.push({b:buffer,d:isNaN(delay)?~~((+new Date()-this.previousHit)/1000*this.sampleRate):delay});return buffers.length;};proto.writeBufferSync=function(buffer){buffer=this.mode==='deinterleaved'?Sink.interleave(buffer,this.channelCount):buffer;var buffers=this.syncBuffers;buffers.push(buffer);return buffers.length;};proto.writeBuffer=function(){return this[this.writeMode==='async'?'writeBufferAsync':'writeBufferSync'].apply(this,arguments);};proto.getSyncWriteOffset=function(){var buffers=this.syncBuffers,offset=0,i;for(i=0;i<buffers.length;i++){offset+=buffers[i].length;}
return offset;};}(this.Sink);(function(tab){var tree={name:"tagName",children:[]};var flat=[];var nodeCount=0;var freqs=[];var freqsToPlay=[];var notes='ABCDEFG';function findNearestFrequency(find){var low=0,high=freqs.length-1,i,comparison;while(low<=high){i=Math.floor((low+high)/2);if(freqs[i]<find){low=i+1;continue;};if(freqs[i]>find){high=i-1;continue;};return freqs[i];}
if(Math.abs(freqs[high]-find)>Math.abs(freqs[low]-find)){return freqs[low];}
return freqs[i];};function generateNameValue(name){var val=0;if(name==="BR"||name==="A")return val;for(var i=0;i<name.length;i++){val+=name[i].charCodeAt();}
val=findNearestFrequency(val);freqsToPlay.push(val);return val;}
function randomColor(){var rint=Math.round(0xffffff*Math.random());return('#0'+rint.toString(16)).replace(/^#0([0-9a-f]{6})$/i,'#$1');}
function buildTagTree(rootElement){var treeElement={};treeElement.name=rootElement.tagName;treeElement.nameValue=generateNameValue(treeElement.name);treeElement.content=rootElement.innerHTML;treeElement.addBorder=function(){rootElement.style.backgroundColor=randomColor();rootElement.style.border="1px solid"+randomColor();};treeElement.removeBorder=function(){rootElement.style.backgroundColor="";rootElement.style.border="";};treeElement.children=[];for(var i=0;i<rootElement.childNodes.length;i++){var childNode=rootElement.childNodes[i];if(childNode.nodeType===1){treeElement.children.push(buildTagTree(childNode));nodeCount++;}}
flat.push(treeElement);return treeElement;}
function makeFrequencies(){var title=document.title;var root="C";var key="major";for(var l=0;l<title.length;l++){var idx=notes.indexOf(title[l].toUpperCase());if(idx!=-1){root=notes.charAt(idx);break;}}
if(document.documentURI.indexOf("https")!==-1){key="harmonic minor";}
if(document.documentURI.indexOf(".com")===-1){key="natural minor";}
if(document.documentURI.indexOf(".org")!==-1){key="minor pentatonic";}
if(document.documentURI.indexOf(".co.")!==-1){key="major pentatonic";}
for(var o=1;o<=8;o++){var n=Note.fromLatin(root+o);var scale=n.scale(key);for(var i=0;i<scale.length;i++){freqs.push(scale[i].frequency());}}
console.log(freqs);}
function nthItems(arr,start,step){var retArray=[];for(var i=start;i<arr.length;i+=step){if(i>arr.length)continue;retArray.push(arr[i]);}
return retArray;}
function forEachNode(callback){for(var i=0;i<flat.length;i++){callback(flat[i]);}}
makeFrequencies();console.log(buildTagTree(document.body));var tempo=0;var Synth=function(audiolet,nodeInfo){var frequency=nodeInfo.nameValue;var children=nodeInfo.children.length||1;AudioletGroup.apply(this,[audiolet,0,1]);if(nodeInfo.children.length===0){this.sine=new Sine(this.audiolet,frequency);}else{this.sine=new Saw(this.audiolet,frequency);}
this.gain=new Gain(this.audiolet);this.modulator=new Triangle(this.audiolet,frequency/2);this.modulatorMulAdd=new MulAdd(this.audiolet,frequency*children,frequency);var release=tempo/(8-nodeInfo.children.length%8);this.envelope=new PercussiveEnvelope(this.audiolet,1,0.1,release,function(){nodeInfo.removeBorder();this.audiolet.scheduler.addRelative(0,this.remove.bind(this));}.bind(this));this.envMulAdd=new MulAdd(this.audiolet,0.5,0);this.filter=new LowPassFilter(this.audiolet,flat.length);this.reverb=new Reverb(this.audiolet,0.33,0.5,0.5);this.upMixer=new UpMixer(audiolet,2);this.modulator.connect(this.modulatorMulAdd);this.modulatorMulAdd.connect(this.sine);this.envelope.connect(this.envMulAdd);this.envMulAdd.connect(this.gain,0,1);this.sine.connect(this.reverb);this.reverb.connect(this.gain);this.gain.connect(this.upMixer);this.upMixer.connect(this.outputs[0]);};var Kick=function(audiolet){AudioletGroup.call(this,audiolet,0,1);this.sine=new Sine(audiolet,80);this.pitchEnv=new PercussiveEnvelope(audiolet,1,0.001,0.3);this.pitchEnvMulAdd=new MulAdd(audiolet,80,1);this.gainEnv=new PercussiveEnvelope(audiolet,1,0.001,0.3,function(){this.audiolet.scheduler.addRelative(0,this.remove.bind(this));}.bind(this));this.gainEnvMulAdd=new MulAdd(audiolet,0.7);this.gain=new Gain(audiolet);this.upMixer=new UpMixer(audiolet,2);this.sine.connect(this.gain);this.pitchEnv.connect(this.pitchEnvMulAdd);this.pitchEnvMulAdd.connect(this.sine);this.gainEnv.connect(this.gainEnvMulAdd);this.gainEnvMulAdd.connect(this.gain,0,1);this.gain.connect(this.upMixer);this.upMixer.connect(this.outputs[0]);};extend(Kick,AudioletGroup);var Hat=function(audiolet){AudioletGroup.call(this,audiolet,0,1);this.sine=new WhiteNoise(this.audiolet);this.gainEnv=new PercussiveEnvelope(audiolet,1,0.01,0.05,function(){this.audiolet.scheduler.addRelative(0,this.remove.bind(this));}.bind(this));this.gainEnvMulAdd=new MulAdd(audiolet,0.7);this.gain=new Gain(audiolet);this.filter=new BandPassFilter(audiolet,3000);this.upMixer=new UpMixer(audiolet,2);this.sine.connect(this.filter);this.filter.connect(this.gain);this.gainEnv.connect(this.gainEnvMulAdd);this.gainEnvMulAdd.connect(this.gain,0,1);this.gain.connect(this.upMixer);this.upMixer.connect(this.outputs[0]);};extend(Hat,AudioletGroup);extend(Synth,AudioletGroup);var AudioletApp=function(){this.audiolet=new Audiolet();var that=this;var scheduler=this.audiolet.scheduler;var audiolet=this.audiolet;tempo=flat.length/3000;tempo=1.5-tempo*1.5;if(tempo>2)tempo=2;if(tempo<0.75)tempo=0.75;console.log(flat.length);var freqPattern,freqPattern2,freqPattern3;var chunkSize=Math.floor(flat.length/3);freqPattern=new PSequence(flat.slice(0,chunkSize));freqPattern2=new PSequence(flat.slice(chunkSize+1,chunkSize*2));freqPattern3=new PSequence(flat.slice(chunkSize*2+1));var beats=[new PSequence([tempo,tempo,tempo,tempo/2,tempo/2],Infinity),new PSequence([tempo/3,tempo/3,tempo/3,tempo*3,tempo*2,tempo],Infinity),new PSequence([tempo*2],Infinity),new PSequence([tempo/2],Infinity),new PSequence([tempo/2,tempo/2,tempo,tempo/2,tempo/2,tempo],Infinity),new PSequence([tempo],Infinity),new PSequence([tempo,tempo,tempo,tempo/2],Infinity),new PSequence([tempo/3],Infinity),new PSequence([tempo*3,tempo/3,tempo/3,tempo/3],Infinity),new PSequence([tempo],Infinity)];var kickBeat=beats[document.title.length%10];var hatBeat=beats[document.documentURI.length%10];scheduler.play([freqPattern],tempo,function(info){info.addBorder();var synth=new Synth(audiolet,info);synth.connect(audiolet.output);}.bind(that));scheduler.play([freqPattern2],tempo/2,function(info){info.addBorder();var synth=new Synth(audiolet,info);synth.connect(audiolet.output);}.bind(that));scheduler.play([freqPattern3],tempo*2,function(info){info.addBorder();var synth=new Synth(audiolet,info);synth.connect(audiolet.output);}.bind(that));scheduler.play([],kickBeat,function(){var kick=new Kick(audiolet);kick.connect(audiolet.output);}.bind(that));scheduler.play([],hatBeat,function(){var hat=new Hat(audiolet);hat.connect(audiolet.output);}.bind(that));};window.audioletApp=new AudioletApp();})();